-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Jezyk/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pVar -> Var                                 (0)
	%start_pArg -> Arg                                 (1)
	%start_pStmt -> Stmt                               (2)
	%start_pStmt1 -> Stmt1                             (3)
	%start_pStmt2 -> Stmt2                             (4)
	%start_pBExpr -> BExpr                             (5)
	%start_pBExpr1 -> BExpr1                           (6)
	%start_pBExpr2 -> BExpr2                           (7)
	%start_pBExpr3 -> BExpr3                           (8)
	%start_pExpr1 -> Expr1                             (9)
	%start_pExpr2 -> Expr2                             (10)
	%start_pExpr3 -> Expr3                             (11)
	%start_pExpr4 -> Expr4                             (12)
	%start_pExpr -> Expr                               (13)
	%start_pType -> Type                               (14)
	%start_pCType -> CType                             (15)
	%start_pADecl -> ADecl                             (16)
	%start_pFDecl -> FDecl                             (17)
	%start_pDecl1 -> Decl1                             (18)
	%start_pDecl -> Decl                               (19)
	Ident -> L_Ident                                   (20)
	Integer -> L_integ                                 (21)
	Var -> Ident                                       (22)
	Var -> Ident 'at' Expr                             (23)
	Arg -> Ident                                       (24)
	Arg -> Ident ',' Arg                               (25)
	Stmt -> 'call' Ident                               (26)
	Stmt -> 'call' Ident 'with' Arg                    (27)
	Stmt -> 'print' Ident                              (28)
	Stmt -> 'begin' Decl ';' Stmt 'end'                (29)
	Stmt -> 'try' Stmt 'catch' Stmt 'end'              (30)
	Stmt -> Stmt1 ';' Stmt                             (31)
	Stmt -> Stmt1                                      (32)
	Stmt1 -> 'set' Var 'to' Expr                       (33)
	Stmt1 -> 'set' Var 'to' 'call' Ident               (34)
	Stmt1 -> 'set' Var 'to' 'call' Ident 'with' Arg    (35)
	Stmt1 -> 'del' Expr 'from' Ident                   (36)
	Stmt1 -> Stmt2                                     (37)
	Stmt2 -> 'if' BExpr 'then' Stmt 'else' Stmt 'end'   (38)
	Stmt2 -> 'if' BExpr 'then' Stmt 'end'              (39)
	Stmt2 -> 'while' BExpr 'do' Stmt1                  (40)
	Stmt2 -> 'for' Ident 'from' Expr 'to' Expr 'do' Stmt 'end'   (41)
	Stmt2 -> 'for' Ident 'in' 'keys' Ident 'do' Stmt 'end'   (42)
	Stmt2 -> 'for' Ident 'in' 'values' Ident 'do' Stmt 'end'   (43)
	Stmt2 -> 'for' Ident ',' Ident 'in' Ident 'do' Stmt 'end'   (44)
	BExpr -> BExpr '&' BExpr1                          (45)
	BExpr -> BExpr '|' BExpr1                          (46)
	BExpr -> BExpr1                                    (47)
	BExpr1 -> '!' BExpr3                               (48)
	BExpr1 -> BExpr2                                   (49)
	BExpr2 -> Expr1 '=' Expr1                          (50)
	BExpr2 -> Expr1 '<' Expr1                          (51)
	BExpr2 -> Expr1 '<=' Expr1                         (52)
	BExpr2 -> Expr1 '>' Expr1                          (53)
	BExpr2 -> Expr1 '>=' Expr1                         (54)
	BExpr2 -> Expr1 '!=' Expr1                         (55)
	BExpr2 -> 'check' Expr 'in' Ident                  (56)
	BExpr2 -> BExpr3                                   (57)
	BExpr3 -> 'true'                                   (58)
	BExpr3 -> 'false'                                  (59)
	BExpr3 -> '(' BExpr ')'                            (60)
	Expr1 -> Expr1 '+' Expr2                           (61)
	Expr1 -> Expr1 '-' Expr2                           (62)
	Expr1 -> Expr2                                     (63)
	Expr2 -> Expr2 '*' Expr3                           (64)
	Expr2 -> Expr2 '/' Expr3                           (65)
	Expr2 -> Expr3                                     (66)
	Expr3 -> '-' Expr4                                 (67)
	Expr3 -> Expr4                                     (68)
	Expr4 -> Integer                                   (69)
	Expr4 -> Ident                                     (70)
	Expr4 -> '(' Expr ')'                              (71)
	Expr -> BExpr '?' Expr1 ':' Expr1                  (72)
	Expr -> Expr1                                      (73)
	Type -> 'bool'                                     (74)
	Type -> 'int'                                      (75)
	CType -> 'array' 'of' Integer Type                 (76)
	CType -> 'dict' 'of' Type                          (77)
	ADecl -> Ident 'of' Type                           (78)
	ADecl -> Ident 'of' Type ',' ADecl                 (79)
	FDecl -> 'fun' 'to' 'void'                         (80)
	FDecl -> 'fun' 'to' Ident 'of' Type                (81)
	FDecl -> 'fun' 'from' ADecl 'to' 'void'            (82)
	FDecl -> 'fun' 'from' ADecl 'to' Ident 'of' Type   (83)
	Decl1 -> 'let' Ident 'be' Type                     (84)
	Decl1 -> 'let' Ident 'be' CType                    (85)
	Decl1 -> 'let' Ident 'be' FDecl 'do' Stmt 'end'    (86)
	Decl -> Decl ';' Decl1                             (87)
	Decl -> Decl1                                      (88)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'&'            { PT _ (TS _ 3) }
	'('            { PT _ (TS _ 4) }
	')'            { PT _ (TS _ 5) }
	'*'            { PT _ (TS _ 6) }
	'+'            { PT _ (TS _ 7) }
	','            { PT _ (TS _ 8) }
	'-'            { PT _ (TS _ 9) }
	'/'            { PT _ (TS _ 10) }
	':'            { PT _ (TS _ 11) }
	';'            { PT _ (TS _ 12) }
	'<'            { PT _ (TS _ 13) }
	'<='           { PT _ (TS _ 14) }
	'='            { PT _ (TS _ 15) }
	'>'            { PT _ (TS _ 16) }
	'>='           { PT _ (TS _ 17) }
	'?'            { PT _ (TS _ 18) }
	'array'        { PT _ (TS _ 19) }
	'at'           { PT _ (TS _ 20) }
	'be'           { PT _ (TS _ 21) }
	'begin'        { PT _ (TS _ 22) }
	'bool'         { PT _ (TS _ 23) }
	'call'         { PT _ (TS _ 24) }
	'catch'        { PT _ (TS _ 25) }
	'check'        { PT _ (TS _ 26) }
	'del'          { PT _ (TS _ 27) }
	'dict'         { PT _ (TS _ 28) }
	'do'           { PT _ (TS _ 29) }
	'else'         { PT _ (TS _ 30) }
	'end'          { PT _ (TS _ 31) }
	'false'        { PT _ (TS _ 32) }
	'for'          { PT _ (TS _ 33) }
	'from'         { PT _ (TS _ 34) }
	'fun'          { PT _ (TS _ 35) }
	'if'           { PT _ (TS _ 36) }
	'in'           { PT _ (TS _ 37) }
	'int'          { PT _ (TS _ 38) }
	'keys'         { PT _ (TS _ 39) }
	'let'          { PT _ (TS _ 40) }
	'of'           { PT _ (TS _ 41) }
	'print'        { PT _ (TS _ 42) }
	'set'          { PT _ (TS _ 43) }
	'then'         { PT _ (TS _ 44) }
	'to'           { PT _ (TS _ 45) }
	'true'         { PT _ (TS _ 46) }
	'try'          { PT _ (TS _ 47) }
	'values'       { PT _ (TS _ 48) }
	'void'         { PT _ (TS _ 49) }
	'while'        { PT _ (TS _ 50) }
	'with'         { PT _ (TS _ 51) }
	'|'            { PT _ (TS _ 52) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pVar     rule  0
	%start_pArg     rule  1
	%start_pStmt    rule  2
	%start_pStmt1   rule  3
	%start_pStmt2   rule  4
	%start_pBExpr   rule  5
	%start_pBExpr1  rule  6
	%start_pBExpr2  rule  7
	%start_pBExpr3  rule  8
	%start_pExpr1   rule  9
	%start_pExpr2   rule  10
	%start_pExpr3   rule  11
	%start_pExpr4   rule  12
	%start_pExpr    rule  13
	%start_pType    rule  14
	%start_pCType   rule  15
	%start_pADecl   rule  16
	%start_pFDecl   rule  17
	%start_pDecl1   rule  18
	%start_pDecl    rule  19
	Ident           rule  20
	Integer         rule  21
	Var             rules 22, 23
	Arg             rules 24, 25
	Stmt            rules 26, 27, 28, 29, 30, 31, 32
	Stmt1           rules 33, 34, 35, 36, 37
	Stmt2           rules 38, 39, 40, 41, 42, 43, 44
	BExpr           rules 45, 46, 47
	BExpr1          rules 48, 49
	BExpr2          rules 50, 51, 52, 53, 54, 55, 56, 57
	BExpr3          rules 58, 59, 60
	Expr1           rules 61, 62, 63
	Expr2           rules 64, 65, 66
	Expr3           rules 67, 68
	Expr4           rules 69, 70, 71
	Expr            rules 72, 73
	Type            rules 74, 75
	CType           rules 76, 77
	ADecl           rules 78, 79
	FDecl           rules 80, 81, 82, 83
	Decl1           rules 84, 85, 86
	Decl            rules 87, 88

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pVar -> . Var                                (rule 0)

	L_Ident        shift, and enter state 21

	Ident          goto state 81
	Var            goto state 82

State 1

	%start_pArg -> . Arg                                (rule 1)

	L_Ident        shift, and enter state 21

	Ident          goto state 79
	Arg            goto state 80

State 2

	%start_pStmt -> . Stmt                              (rule 2)

	'begin'        shift, and enter state 75
	'call'         shift, and enter state 76
	'del'          shift, and enter state 71
	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'print'        shift, and enter state 77
	'set'          shift, and enter state 72
	'try'          shift, and enter state 78
	'while'        shift, and enter state 68

	Stmt           goto state 73
	Stmt1          goto state 74
	Stmt2          goto state 70

State 3

	%start_pStmt1 -> . Stmt1                            (rule 3)

	'del'          shift, and enter state 71
	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'set'          shift, and enter state 72
	'while'        shift, and enter state 68

	Stmt1          goto state 69
	Stmt2          goto state 70

State 4

	%start_pStmt2 -> . Stmt2                            (rule 4)

	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'while'        shift, and enter state 68

	Stmt2          goto state 65

State 5

	%start_pBExpr -> . BExpr                            (rule 5)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr          goto state 64
	BExpr1         goto state 39
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 62
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 6

	%start_pBExpr1 -> . BExpr1                          (rule 6)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr1         goto state 63
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 62
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 7

	%start_pBExpr2 -> . BExpr2                          (rule 7)

	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr2         goto state 61
	BExpr3         goto state 41
	Expr1          goto state 62
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 8

	%start_pBExpr3 -> . BExpr3                          (rule 8)

	'('            shift, and enter state 60
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52

	BExpr3         goto state 59

State 9

	%start_pExpr1 -> . Expr1                            (rule 9)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr1          goto state 58
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 10

	%start_pExpr2 -> . Expr2                            (rule 10)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr2          goto state 57
	Expr3          goto state 44
	Expr4          goto state 45

State 11

	%start_pExpr3 -> . Expr3                            (rule 11)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr3          goto state 56
	Expr4          goto state 45

State 12

	%start_pExpr4 -> . Expr4                            (rule 12)

	'('            shift, and enter state 55
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr4          goto state 54

State 13

	%start_pExpr -> . Expr                              (rule 13)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr          goto state 38
	BExpr1         goto state 39
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 42
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45
	Expr           goto state 46

State 14

	%start_pType -> . Type                              (rule 14)

	'bool'         shift, and enter state 34
	'int'          shift, and enter state 35

	Type           goto state 33

State 15

	%start_pCType -> . CType                            (rule 15)

	'array'        shift, and enter state 31
	'dict'         shift, and enter state 32

	CType          goto state 30

State 16

	%start_pADecl -> . ADecl                            (rule 16)

	L_Ident        shift, and enter state 21

	Ident          goto state 28
	ADecl          goto state 29

State 17

	%start_pFDecl -> . FDecl                            (rule 17)

	'fun'          shift, and enter state 27

	FDecl          goto state 26

State 18

	%start_pDecl1 -> . Decl1                            (rule 18)

	'let'          shift, and enter state 24

	Decl1          goto state 25

State 19

	%start_pDecl -> . Decl                              (rule 19)

	'let'          shift, and enter state 24

	Decl1          goto state 22
	Decl           goto state 23

State 20

	Ident -> . L_Ident                                  (rule 20)

	L_Ident        shift, and enter state 21


State 21

	Ident -> L_Ident .                                  (rule 20)

	'!='           reduce using rule 20
	'&'            reduce using rule 20
	')'            reduce using rule 20
	'*'            reduce using rule 20
	'+'            reduce using rule 20
	','            reduce using rule 20
	'-'            reduce using rule 20
	'/'            reduce using rule 20
	':'            reduce using rule 20
	';'            reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'='            reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	'?'            reduce using rule 20
	'at'           reduce using rule 20
	'be'           reduce using rule 20
	'catch'        reduce using rule 20
	'do'           reduce using rule 20
	'else'         reduce using rule 20
	'end'          reduce using rule 20
	'from'         reduce using rule 20
	'in'           reduce using rule 20
	'of'           reduce using rule 20
	'then'         reduce using rule 20
	'to'           reduce using rule 20
	'with'         reduce using rule 20
	'|'            reduce using rule 20
	%eof           reduce using rule 20


State 22

	Decl -> Decl1 .                                     (rule 88)

	';'            reduce using rule 88
	%eof           reduce using rule 88


State 23

	%start_pDecl -> Decl .                              (rule 19)
	Decl -> Decl . ';' Decl1                            (rule 87)

	';'            shift, and enter state 120
	%eof           accept


State 24

	Decl1 -> 'let' . Ident 'be' Type                    (rule 84)
	Decl1 -> 'let' . Ident 'be' CType                   (rule 85)
	Decl1 -> 'let' . Ident 'be' FDecl 'do' Stmt 'end'    (rule 86)

	L_Ident        shift, and enter state 21

	Ident          goto state 119

State 25

	%start_pDecl1 -> Decl1 .                            (rule 18)

	%eof           accept


State 26

	%start_pFDecl -> FDecl .                            (rule 17)

	%eof           accept


State 27

	FDecl -> 'fun' . 'to' 'void'                        (rule 80)
	FDecl -> 'fun' . 'to' Ident 'of' Type               (rule 81)
	FDecl -> 'fun' . 'from' ADecl 'to' 'void'           (rule 82)
	FDecl -> 'fun' . 'from' ADecl 'to' Ident 'of' Type    (rule 83)

	'from'         shift, and enter state 117
	'to'           shift, and enter state 118


State 28

	ADecl -> Ident . 'of' Type                          (rule 78)
	ADecl -> Ident . 'of' Type ',' ADecl                (rule 79)

	'of'           shift, and enter state 116


State 29

	%start_pADecl -> ADecl .                            (rule 16)

	%eof           accept


State 30

	%start_pCType -> CType .                            (rule 15)

	%eof           accept


State 31

	CType -> 'array' . 'of' Integer Type                (rule 76)

	'of'           shift, and enter state 115


State 32

	CType -> 'dict' . 'of' Type                         (rule 77)

	'of'           shift, and enter state 114


State 33

	%start_pType -> Type .                              (rule 14)

	%eof           accept


State 34

	Type -> 'bool' .                                    (rule 74)

	','            reduce using rule 74
	';'            reduce using rule 74
	'do'           reduce using rule 74
	'to'           reduce using rule 74
	%eof           reduce using rule 74


State 35

	Type -> 'int' .                                     (rule 75)

	','            reduce using rule 75
	';'            reduce using rule 75
	'do'           reduce using rule 75
	'to'           reduce using rule 75
	%eof           reduce using rule 75


State 36

	Expr4 -> Ident .                                    (rule 70)

	'!='           reduce using rule 70
	'&'            reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'+'            reduce using rule 70
	'-'            reduce using rule 70
	'/'            reduce using rule 70
	':'            reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'='            reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'?'            reduce using rule 70
	'catch'        reduce using rule 70
	'do'           reduce using rule 70
	'else'         reduce using rule 70
	'end'          reduce using rule 70
	'from'         reduce using rule 70
	'in'           reduce using rule 70
	'then'         reduce using rule 70
	'to'           reduce using rule 70
	'|'            reduce using rule 70
	%eof           reduce using rule 70


State 37

	Expr4 -> Integer .                                  (rule 69)

	'!='           reduce using rule 69
	'&'            reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	'-'            reduce using rule 69
	'/'            reduce using rule 69
	':'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'='            reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'?'            reduce using rule 69
	'catch'        reduce using rule 69
	'do'           reduce using rule 69
	'else'         reduce using rule 69
	'end'          reduce using rule 69
	'from'         reduce using rule 69
	'in'           reduce using rule 69
	'then'         reduce using rule 69
	'to'           reduce using rule 69
	'|'            reduce using rule 69
	%eof           reduce using rule 69


State 38

	BExpr -> BExpr . '&' BExpr1                         (rule 45)
	BExpr -> BExpr . '|' BExpr1                         (rule 46)
	Expr -> BExpr . '?' Expr1 ':' Expr1                 (rule 72)

	'&'            shift, and enter state 95
	'?'            shift, and enter state 113
	'|'            shift, and enter state 96


State 39

	BExpr -> BExpr1 .                                   (rule 47)

	'&'            reduce using rule 47
	')'            reduce using rule 47
	'?'            reduce using rule 47
	'do'           reduce using rule 47
	'then'         reduce using rule 47
	'|'            reduce using rule 47
	%eof           reduce using rule 47


State 40

	BExpr1 -> BExpr2 .                                  (rule 49)

	'&'            reduce using rule 49
	')'            reduce using rule 49
	'?'            reduce using rule 49
	'do'           reduce using rule 49
	'then'         reduce using rule 49
	'|'            reduce using rule 49
	%eof           reduce using rule 49


State 41

	BExpr2 -> BExpr3 .                                  (rule 57)

	'&'            reduce using rule 57
	')'            reduce using rule 57
	'?'            reduce using rule 57
	'do'           reduce using rule 57
	'then'         reduce using rule 57
	'|'            reduce using rule 57
	%eof           reduce using rule 57


State 42

	BExpr2 -> Expr1 . '=' Expr1                         (rule 50)
	BExpr2 -> Expr1 . '<' Expr1                         (rule 51)
	BExpr2 -> Expr1 . '<=' Expr1                        (rule 52)
	BExpr2 -> Expr1 . '>' Expr1                         (rule 53)
	BExpr2 -> Expr1 . '>=' Expr1                        (rule 54)
	BExpr2 -> Expr1 . '!=' Expr1                        (rule 55)
	Expr1 -> Expr1 . '+' Expr2                          (rule 61)
	Expr1 -> Expr1 . '-' Expr2                          (rule 62)
	Expr -> Expr1 .                                     (rule 73)

	'!='           shift, and enter state 97
	')'            reduce using rule 73
	'+'            shift, and enter state 98
	'-'            shift, and enter state 99
	';'            reduce using rule 73
	'<'            shift, and enter state 100
	'<='           shift, and enter state 101
	'='            shift, and enter state 102
	'>'            shift, and enter state 103
	'>='           shift, and enter state 104
	'catch'        reduce using rule 73
	'do'           reduce using rule 73
	'else'         reduce using rule 73
	'end'          reduce using rule 73
	'from'         reduce using rule 73
	'in'           reduce using rule 73
	'to'           reduce using rule 73
	%eof           reduce using rule 73


State 43

	Expr1 -> Expr2 .                                    (rule 63)
	Expr2 -> Expr2 . '*' Expr3                          (rule 64)
	Expr2 -> Expr2 . '/' Expr3                          (rule 65)

	'!='           reduce using rule 63
	'&'            reduce using rule 63
	')'            reduce using rule 63
	'*'            shift, and enter state 106
	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'/'            shift, and enter state 107
	':'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'?'            reduce using rule 63
	'catch'        reduce using rule 63
	'do'           reduce using rule 63
	'else'         reduce using rule 63
	'end'          reduce using rule 63
	'from'         reduce using rule 63
	'in'           reduce using rule 63
	'then'         reduce using rule 63
	'to'           reduce using rule 63
	'|'            reduce using rule 63
	%eof           reduce using rule 63


State 44

	Expr2 -> Expr3 .                                    (rule 66)

	'!='           reduce using rule 66
	'&'            reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	':'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'?'            reduce using rule 66
	'catch'        reduce using rule 66
	'do'           reduce using rule 66
	'else'         reduce using rule 66
	'end'          reduce using rule 66
	'from'         reduce using rule 66
	'in'           reduce using rule 66
	'then'         reduce using rule 66
	'to'           reduce using rule 66
	'|'            reduce using rule 66
	%eof           reduce using rule 66


State 45

	Expr3 -> Expr4 .                                    (rule 68)

	'!='           reduce using rule 68
	'&'            reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	'-'            reduce using rule 68
	'/'            reduce using rule 68
	':'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'='            reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'?'            reduce using rule 68
	'catch'        reduce using rule 68
	'do'           reduce using rule 68
	'else'         reduce using rule 68
	'end'          reduce using rule 68
	'from'         reduce using rule 68
	'in'           reduce using rule 68
	'then'         reduce using rule 68
	'to'           reduce using rule 68
	'|'            reduce using rule 68
	%eof           reduce using rule 68


State 46

	%start_pExpr -> Expr .                              (rule 13)

	%eof           accept


State 47

	BExpr1 -> '!' . BExpr3                              (rule 48)

	'('            shift, and enter state 60
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52

	BExpr3         goto state 112

State 48

	BExpr3 -> '(' . BExpr ')'                           (rule 60)
	Expr4 -> '(' . Expr ')'                             (rule 71)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr          goto state 111
	BExpr1         goto state 39
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 42
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45
	Expr           goto state 108

State 49

	Expr3 -> '-' . Expr4                                (rule 67)

	'('            shift, and enter state 55
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr4          goto state 110

State 50

	BExpr2 -> 'check' . Expr 'in' Ident                 (rule 56)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr          goto state 38
	BExpr1         goto state 39
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 42
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45
	Expr           goto state 109

State 51

	BExpr3 -> 'false' .                                 (rule 59)

	'&'            reduce using rule 59
	')'            reduce using rule 59
	'?'            reduce using rule 59
	'do'           reduce using rule 59
	'then'         reduce using rule 59
	'|'            reduce using rule 59
	%eof           reduce using rule 59


State 52

	BExpr3 -> 'true' .                                  (rule 58)

	'&'            reduce using rule 58
	')'            reduce using rule 58
	'?'            reduce using rule 58
	'do'           reduce using rule 58
	'then'         reduce using rule 58
	'|'            reduce using rule 58
	%eof           reduce using rule 58


State 53

	Integer -> L_integ .                                (rule 21)

	'!='           reduce using rule 21
	'&'            reduce using rule 21
	')'            reduce using rule 21
	'*'            reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'/'            reduce using rule 21
	':'            reduce using rule 21
	';'            reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'='            reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'?'            reduce using rule 21
	'bool'         reduce using rule 21
	'catch'        reduce using rule 21
	'do'           reduce using rule 21
	'else'         reduce using rule 21
	'end'          reduce using rule 21
	'from'         reduce using rule 21
	'in'           reduce using rule 21
	'int'          reduce using rule 21
	'then'         reduce using rule 21
	'to'           reduce using rule 21
	'|'            reduce using rule 21
	%eof           reduce using rule 21


State 54

	%start_pExpr4 -> Expr4 .                            (rule 12)

	%eof           accept


State 55

	Expr4 -> '(' . Expr ')'                             (rule 71)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr          goto state 38
	BExpr1         goto state 39
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 42
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45
	Expr           goto state 108

State 56

	%start_pExpr3 -> Expr3 .                            (rule 11)

	%eof           accept


State 57

	%start_pExpr2 -> Expr2 .                            (rule 10)
	Expr2 -> Expr2 . '*' Expr3                          (rule 64)
	Expr2 -> Expr2 . '/' Expr3                          (rule 65)

	'*'            shift, and enter state 106
	'/'            shift, and enter state 107
	%eof           accept


State 58

	%start_pExpr1 -> Expr1 .                            (rule 9)
	Expr1 -> Expr1 . '+' Expr2                          (rule 61)
	Expr1 -> Expr1 . '-' Expr2                          (rule 62)

	'+'            shift, and enter state 98
	'-'            shift, and enter state 99
	%eof           accept


State 59

	%start_pBExpr3 -> BExpr3 .                          (rule 8)

	%eof           accept


State 60

	BExpr3 -> '(' . BExpr ')'                           (rule 60)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr          goto state 105
	BExpr1         goto state 39
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 62
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 61

	%start_pBExpr2 -> BExpr2 .                          (rule 7)

	%eof           accept


State 62

	BExpr2 -> Expr1 . '=' Expr1                         (rule 50)
	BExpr2 -> Expr1 . '<' Expr1                         (rule 51)
	BExpr2 -> Expr1 . '<=' Expr1                        (rule 52)
	BExpr2 -> Expr1 . '>' Expr1                         (rule 53)
	BExpr2 -> Expr1 . '>=' Expr1                        (rule 54)
	BExpr2 -> Expr1 . '!=' Expr1                        (rule 55)
	Expr1 -> Expr1 . '+' Expr2                          (rule 61)
	Expr1 -> Expr1 . '-' Expr2                          (rule 62)

	'!='           shift, and enter state 97
	'+'            shift, and enter state 98
	'-'            shift, and enter state 99
	'<'            shift, and enter state 100
	'<='           shift, and enter state 101
	'='            shift, and enter state 102
	'>'            shift, and enter state 103
	'>='           shift, and enter state 104


State 63

	%start_pBExpr1 -> BExpr1 .                          (rule 6)

	%eof           accept


State 64

	%start_pBExpr -> BExpr .                            (rule 5)
	BExpr -> BExpr . '&' BExpr1                         (rule 45)
	BExpr -> BExpr . '|' BExpr1                         (rule 46)

	'&'            shift, and enter state 95
	'|'            shift, and enter state 96
	%eof           accept


State 65

	%start_pStmt2 -> Stmt2 .                            (rule 4)

	%eof           accept


State 66

	Stmt2 -> 'for' . Ident 'from' Expr 'to' Expr 'do' Stmt 'end'    (rule 41)
	Stmt2 -> 'for' . Ident 'in' 'keys' Ident 'do' Stmt 'end'    (rule 42)
	Stmt2 -> 'for' . Ident 'in' 'values' Ident 'do' Stmt 'end'    (rule 43)
	Stmt2 -> 'for' . Ident ',' Ident 'in' Ident 'do' Stmt 'end'    (rule 44)

	L_Ident        shift, and enter state 21

	Ident          goto state 94

State 67

	Stmt2 -> 'if' . BExpr 'then' Stmt 'else' Stmt 'end'    (rule 38)
	Stmt2 -> 'if' . BExpr 'then' Stmt 'end'             (rule 39)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr          goto state 93
	BExpr1         goto state 39
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 62
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 68

	Stmt2 -> 'while' . BExpr 'do' Stmt1                 (rule 40)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr          goto state 92
	BExpr1         goto state 39
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 62
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 69

	%start_pStmt1 -> Stmt1 .                            (rule 3)

	%eof           accept


State 70

	Stmt1 -> Stmt2 .                                    (rule 37)

	';'            reduce using rule 37
	'catch'        reduce using rule 37
	'else'         reduce using rule 37
	'end'          reduce using rule 37
	%eof           reduce using rule 37


State 71

	Stmt1 -> 'del' . Expr 'from' Ident                  (rule 36)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr          goto state 38
	BExpr1         goto state 39
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 42
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45
	Expr           goto state 91

State 72

	Stmt1 -> 'set' . Var 'to' Expr                      (rule 33)
	Stmt1 -> 'set' . Var 'to' 'call' Ident              (rule 34)
	Stmt1 -> 'set' . Var 'to' 'call' Ident 'with' Arg    (rule 35)

	L_Ident        shift, and enter state 21

	Ident          goto state 81
	Var            goto state 90

State 73

	%start_pStmt -> Stmt .                              (rule 2)

	%eof           accept


State 74

	Stmt -> Stmt1 . ';' Stmt                            (rule 31)
	Stmt -> Stmt1 .                                     (rule 32)

	';'            shift, and enter state 89
	'catch'        reduce using rule 32
	'else'         reduce using rule 32
	'end'          reduce using rule 32
	%eof           reduce using rule 32


State 75

	Stmt -> 'begin' . Decl ';' Stmt 'end'               (rule 29)

	'let'          shift, and enter state 24

	Decl1          goto state 22
	Decl           goto state 88

State 76

	Stmt -> 'call' . Ident                              (rule 26)
	Stmt -> 'call' . Ident 'with' Arg                   (rule 27)

	L_Ident        shift, and enter state 21

	Ident          goto state 87

State 77

	Stmt -> 'print' . Ident                             (rule 28)

	L_Ident        shift, and enter state 21

	Ident          goto state 86

State 78

	Stmt -> 'try' . Stmt 'catch' Stmt 'end'             (rule 30)

	'begin'        shift, and enter state 75
	'call'         shift, and enter state 76
	'del'          shift, and enter state 71
	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'print'        shift, and enter state 77
	'set'          shift, and enter state 72
	'try'          shift, and enter state 78
	'while'        shift, and enter state 68

	Stmt           goto state 85
	Stmt1          goto state 74
	Stmt2          goto state 70

State 79

	Arg -> Ident .                                      (rule 24)
	Arg -> Ident . ',' Arg                              (rule 25)

	','            shift, and enter state 84
	';'            reduce using rule 24
	'catch'        reduce using rule 24
	'else'         reduce using rule 24
	'end'          reduce using rule 24
	%eof           reduce using rule 24


State 80

	%start_pArg -> Arg .                                (rule 1)

	%eof           accept


State 81

	Var -> Ident .                                      (rule 22)
	Var -> Ident . 'at' Expr                            (rule 23)

	'at'           shift, and enter state 83
	'to'           reduce using rule 22
	%eof           reduce using rule 22


State 82

	%start_pVar -> Var .                                (rule 0)

	%eof           accept


State 83

	Var -> Ident 'at' . Expr                            (rule 23)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr          goto state 38
	BExpr1         goto state 39
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 42
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45
	Expr           goto state 157

State 84

	Arg -> Ident ',' . Arg                              (rule 25)

	L_Ident        shift, and enter state 21

	Ident          goto state 79
	Arg            goto state 156

State 85

	Stmt -> 'try' Stmt . 'catch' Stmt 'end'             (rule 30)

	'catch'        shift, and enter state 155


State 86

	Stmt -> 'print' Ident .                             (rule 28)

	'catch'        reduce using rule 28
	'else'         reduce using rule 28
	'end'          reduce using rule 28
	%eof           reduce using rule 28


State 87

	Stmt -> 'call' Ident .                              (rule 26)
	Stmt -> 'call' Ident . 'with' Arg                   (rule 27)

	'catch'        reduce using rule 26
	'else'         reduce using rule 26
	'end'          reduce using rule 26
	'with'         shift, and enter state 154
	%eof           reduce using rule 26


State 88

	Stmt -> 'begin' Decl . ';' Stmt 'end'               (rule 29)
	Decl -> Decl . ';' Decl1                            (rule 87)

	';'            shift, and enter state 153


State 89

	Stmt -> Stmt1 ';' . Stmt                            (rule 31)

	'begin'        shift, and enter state 75
	'call'         shift, and enter state 76
	'del'          shift, and enter state 71
	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'print'        shift, and enter state 77
	'set'          shift, and enter state 72
	'try'          shift, and enter state 78
	'while'        shift, and enter state 68

	Stmt           goto state 152
	Stmt1          goto state 74
	Stmt2          goto state 70

State 90

	Stmt1 -> 'set' Var . 'to' Expr                      (rule 33)
	Stmt1 -> 'set' Var . 'to' 'call' Ident              (rule 34)
	Stmt1 -> 'set' Var . 'to' 'call' Ident 'with' Arg    (rule 35)

	'to'           shift, and enter state 151


State 91

	Stmt1 -> 'del' Expr . 'from' Ident                  (rule 36)

	'from'         shift, and enter state 150


State 92

	Stmt2 -> 'while' BExpr . 'do' Stmt1                 (rule 40)
	BExpr -> BExpr . '&' BExpr1                         (rule 45)
	BExpr -> BExpr . '|' BExpr1                         (rule 46)

	'&'            shift, and enter state 95
	'do'           shift, and enter state 149
	'|'            shift, and enter state 96


State 93

	Stmt2 -> 'if' BExpr . 'then' Stmt 'else' Stmt 'end'    (rule 38)
	Stmt2 -> 'if' BExpr . 'then' Stmt 'end'             (rule 39)
	BExpr -> BExpr . '&' BExpr1                         (rule 45)
	BExpr -> BExpr . '|' BExpr1                         (rule 46)

	'&'            shift, and enter state 95
	'then'         shift, and enter state 148
	'|'            shift, and enter state 96


State 94

	Stmt2 -> 'for' Ident . 'from' Expr 'to' Expr 'do' Stmt 'end'    (rule 41)
	Stmt2 -> 'for' Ident . 'in' 'keys' Ident 'do' Stmt 'end'    (rule 42)
	Stmt2 -> 'for' Ident . 'in' 'values' Ident 'do' Stmt 'end'    (rule 43)
	Stmt2 -> 'for' Ident . ',' Ident 'in' Ident 'do' Stmt 'end'    (rule 44)

	','            shift, and enter state 145
	'from'         shift, and enter state 146
	'in'           shift, and enter state 147


State 95

	BExpr -> BExpr '&' . BExpr1                         (rule 45)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr1         goto state 144
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 62
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 96

	BExpr -> BExpr '|' . BExpr1                         (rule 46)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr1         goto state 143
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 62
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 97

	BExpr2 -> Expr1 '!=' . Expr1                        (rule 55)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr1          goto state 142
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 98

	Expr1 -> Expr1 '+' . Expr2                          (rule 61)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr2          goto state 141
	Expr3          goto state 44
	Expr4          goto state 45

State 99

	Expr1 -> Expr1 '-' . Expr2                          (rule 62)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr2          goto state 140
	Expr3          goto state 44
	Expr4          goto state 45

State 100

	BExpr2 -> Expr1 '<' . Expr1                         (rule 51)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr1          goto state 139
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 101

	BExpr2 -> Expr1 '<=' . Expr1                        (rule 52)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr1          goto state 138
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 102

	BExpr2 -> Expr1 '=' . Expr1                         (rule 50)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr1          goto state 137
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 103

	BExpr2 -> Expr1 '>' . Expr1                         (rule 53)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr1          goto state 136
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 104

	BExpr2 -> Expr1 '>=' . Expr1                        (rule 54)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr1          goto state 135
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 105

	BExpr -> BExpr . '&' BExpr1                         (rule 45)
	BExpr -> BExpr . '|' BExpr1                         (rule 46)
	BExpr3 -> '(' BExpr . ')'                           (rule 60)

	'&'            shift, and enter state 95
	')'            shift, and enter state 130
	'|'            shift, and enter state 96


State 106

	Expr2 -> Expr2 '*' . Expr3                          (rule 64)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr3          goto state 134
	Expr4          goto state 45

State 107

	Expr2 -> Expr2 '/' . Expr3                          (rule 65)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr3          goto state 133
	Expr4          goto state 45

State 108

	Expr4 -> '(' Expr . ')'                             (rule 71)

	')'            shift, and enter state 132


State 109

	BExpr2 -> 'check' Expr . 'in' Ident                 (rule 56)

	'in'           shift, and enter state 131


State 110

	Expr3 -> '-' Expr4 .                                (rule 67)

	'!='           reduce using rule 67
	'&'            reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	':'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'?'            reduce using rule 67
	'catch'        reduce using rule 67
	'do'           reduce using rule 67
	'else'         reduce using rule 67
	'end'          reduce using rule 67
	'from'         reduce using rule 67
	'in'           reduce using rule 67
	'then'         reduce using rule 67
	'to'           reduce using rule 67
	'|'            reduce using rule 67
	%eof           reduce using rule 67


State 111

	BExpr -> BExpr . '&' BExpr1                         (rule 45)
	BExpr -> BExpr . '|' BExpr1                         (rule 46)
	BExpr3 -> '(' BExpr . ')'                           (rule 60)
	Expr -> BExpr . '?' Expr1 ':' Expr1                 (rule 72)

	'&'            shift, and enter state 95
	')'            shift, and enter state 130
	'?'            shift, and enter state 113
	'|'            shift, and enter state 96


State 112

	BExpr1 -> '!' BExpr3 .                              (rule 48)

	'&'            reduce using rule 48
	')'            reduce using rule 48
	'?'            reduce using rule 48
	'do'           reduce using rule 48
	'then'         reduce using rule 48
	'|'            reduce using rule 48
	%eof           reduce using rule 48


State 113

	Expr -> BExpr '?' . Expr1 ':' Expr1                 (rule 72)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr1          goto state 129
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 114

	CType -> 'dict' 'of' . Type                         (rule 77)

	'bool'         shift, and enter state 34
	'int'          shift, and enter state 35

	Type           goto state 128

State 115

	CType -> 'array' 'of' . Integer Type                (rule 76)

	L_integ        shift, and enter state 53

	Integer        goto state 127

State 116

	ADecl -> Ident 'of' . Type                          (rule 78)
	ADecl -> Ident 'of' . Type ',' ADecl                (rule 79)

	'bool'         shift, and enter state 34
	'int'          shift, and enter state 35

	Type           goto state 126

State 117

	FDecl -> 'fun' 'from' . ADecl 'to' 'void'           (rule 82)
	FDecl -> 'fun' 'from' . ADecl 'to' Ident 'of' Type    (rule 83)

	L_Ident        shift, and enter state 21

	Ident          goto state 28
	ADecl          goto state 125

State 118

	FDecl -> 'fun' 'to' . 'void'                        (rule 80)
	FDecl -> 'fun' 'to' . Ident 'of' Type               (rule 81)

	'void'         shift, and enter state 124
	L_Ident        shift, and enter state 21

	Ident          goto state 123

State 119

	Decl1 -> 'let' Ident . 'be' Type                    (rule 84)
	Decl1 -> 'let' Ident . 'be' CType                   (rule 85)
	Decl1 -> 'let' Ident . 'be' FDecl 'do' Stmt 'end'    (rule 86)

	'be'           shift, and enter state 122


State 120

	Decl -> Decl ';' . Decl1                            (rule 87)

	'let'          shift, and enter state 24

	Decl1          goto state 121

State 121

	Decl -> Decl ';' Decl1 .                            (rule 87)

	';'            reduce using rule 87
	%eof           reduce using rule 87


State 122

	Decl1 -> 'let' Ident 'be' . Type                    (rule 84)
	Decl1 -> 'let' Ident 'be' . CType                   (rule 85)
	Decl1 -> 'let' Ident 'be' . FDecl 'do' Stmt 'end'    (rule 86)

	'array'        shift, and enter state 31
	'bool'         shift, and enter state 34
	'dict'         shift, and enter state 32
	'fun'          shift, and enter state 27
	'int'          shift, and enter state 35

	Type           goto state 176
	CType          goto state 177
	FDecl          goto state 178

State 123

	FDecl -> 'fun' 'to' Ident . 'of' Type               (rule 81)

	'of'           shift, and enter state 175


State 124

	FDecl -> 'fun' 'to' 'void' .                        (rule 80)

	'do'           reduce using rule 80
	%eof           reduce using rule 80


State 125

	FDecl -> 'fun' 'from' ADecl . 'to' 'void'           (rule 82)
	FDecl -> 'fun' 'from' ADecl . 'to' Ident 'of' Type    (rule 83)

	'to'           shift, and enter state 174


State 126

	ADecl -> Ident 'of' Type .                          (rule 78)
	ADecl -> Ident 'of' Type . ',' ADecl                (rule 79)

	','            shift, and enter state 173
	'to'           reduce using rule 78
	%eof           reduce using rule 78


State 127

	CType -> 'array' 'of' Integer . Type                (rule 76)

	'bool'         shift, and enter state 34
	'int'          shift, and enter state 35

	Type           goto state 172

State 128

	CType -> 'dict' 'of' Type .                         (rule 77)

	';'            reduce using rule 77
	%eof           reduce using rule 77


State 129

	Expr1 -> Expr1 . '+' Expr2                          (rule 61)
	Expr1 -> Expr1 . '-' Expr2                          (rule 62)
	Expr -> BExpr '?' Expr1 . ':' Expr1                 (rule 72)

	'+'            shift, and enter state 98
	'-'            shift, and enter state 99
	':'            shift, and enter state 171


State 130

	BExpr3 -> '(' BExpr ')' .                           (rule 60)

	'&'            reduce using rule 60
	')'            reduce using rule 60
	'?'            reduce using rule 60
	'do'           reduce using rule 60
	'then'         reduce using rule 60
	'|'            reduce using rule 60
	%eof           reduce using rule 60


State 131

	BExpr2 -> 'check' Expr 'in' . Ident                 (rule 56)

	L_Ident        shift, and enter state 21

	Ident          goto state 170

State 132

	Expr4 -> '(' Expr ')' .                             (rule 71)

	'!='           reduce using rule 71
	'&'            reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'/'            reduce using rule 71
	':'            reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'='            reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'?'            reduce using rule 71
	'catch'        reduce using rule 71
	'do'           reduce using rule 71
	'else'         reduce using rule 71
	'end'          reduce using rule 71
	'from'         reduce using rule 71
	'in'           reduce using rule 71
	'then'         reduce using rule 71
	'to'           reduce using rule 71
	'|'            reduce using rule 71
	%eof           reduce using rule 71


State 133

	Expr2 -> Expr2 '/' Expr3 .                          (rule 65)

	'!='           reduce using rule 65
	'&'            reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	':'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'?'            reduce using rule 65
	'catch'        reduce using rule 65
	'do'           reduce using rule 65
	'else'         reduce using rule 65
	'end'          reduce using rule 65
	'from'         reduce using rule 65
	'in'           reduce using rule 65
	'then'         reduce using rule 65
	'to'           reduce using rule 65
	'|'            reduce using rule 65
	%eof           reduce using rule 65


State 134

	Expr2 -> Expr2 '*' Expr3 .                          (rule 64)

	'!='           reduce using rule 64
	'&'            reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	':'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'?'            reduce using rule 64
	'catch'        reduce using rule 64
	'do'           reduce using rule 64
	'else'         reduce using rule 64
	'end'          reduce using rule 64
	'from'         reduce using rule 64
	'in'           reduce using rule 64
	'then'         reduce using rule 64
	'to'           reduce using rule 64
	'|'            reduce using rule 64
	%eof           reduce using rule 64


State 135

	BExpr2 -> Expr1 '>=' Expr1 .                        (rule 54)
	Expr1 -> Expr1 . '+' Expr2                          (rule 61)
	Expr1 -> Expr1 . '-' Expr2                          (rule 62)

	'&'            reduce using rule 54
	')'            reduce using rule 54
	'+'            shift, and enter state 98
	'-'            shift, and enter state 99
	'?'            reduce using rule 54
	'do'           reduce using rule 54
	'then'         reduce using rule 54
	'|'            reduce using rule 54
	%eof           reduce using rule 54


State 136

	BExpr2 -> Expr1 '>' Expr1 .                         (rule 53)
	Expr1 -> Expr1 . '+' Expr2                          (rule 61)
	Expr1 -> Expr1 . '-' Expr2                          (rule 62)

	'&'            reduce using rule 53
	')'            reduce using rule 53
	'+'            shift, and enter state 98
	'-'            shift, and enter state 99
	'?'            reduce using rule 53
	'do'           reduce using rule 53
	'then'         reduce using rule 53
	'|'            reduce using rule 53
	%eof           reduce using rule 53


State 137

	BExpr2 -> Expr1 '=' Expr1 .                         (rule 50)
	Expr1 -> Expr1 . '+' Expr2                          (rule 61)
	Expr1 -> Expr1 . '-' Expr2                          (rule 62)

	'&'            reduce using rule 50
	')'            reduce using rule 50
	'+'            shift, and enter state 98
	'-'            shift, and enter state 99
	'?'            reduce using rule 50
	'do'           reduce using rule 50
	'then'         reduce using rule 50
	'|'            reduce using rule 50
	%eof           reduce using rule 50


State 138

	BExpr2 -> Expr1 '<=' Expr1 .                        (rule 52)
	Expr1 -> Expr1 . '+' Expr2                          (rule 61)
	Expr1 -> Expr1 . '-' Expr2                          (rule 62)

	'&'            reduce using rule 52
	')'            reduce using rule 52
	'+'            shift, and enter state 98
	'-'            shift, and enter state 99
	'?'            reduce using rule 52
	'do'           reduce using rule 52
	'then'         reduce using rule 52
	'|'            reduce using rule 52
	%eof           reduce using rule 52


State 139

	BExpr2 -> Expr1 '<' Expr1 .                         (rule 51)
	Expr1 -> Expr1 . '+' Expr2                          (rule 61)
	Expr1 -> Expr1 . '-' Expr2                          (rule 62)

	'&'            reduce using rule 51
	')'            reduce using rule 51
	'+'            shift, and enter state 98
	'-'            shift, and enter state 99
	'?'            reduce using rule 51
	'do'           reduce using rule 51
	'then'         reduce using rule 51
	'|'            reduce using rule 51
	%eof           reduce using rule 51


State 140

	Expr1 -> Expr1 '-' Expr2 .                          (rule 62)
	Expr2 -> Expr2 . '*' Expr3                          (rule 64)
	Expr2 -> Expr2 . '/' Expr3                          (rule 65)

	'!='           reduce using rule 62
	'&'            reduce using rule 62
	')'            reduce using rule 62
	'*'            shift, and enter state 106
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'/'            shift, and enter state 107
	':'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'?'            reduce using rule 62
	'catch'        reduce using rule 62
	'do'           reduce using rule 62
	'else'         reduce using rule 62
	'end'          reduce using rule 62
	'from'         reduce using rule 62
	'in'           reduce using rule 62
	'then'         reduce using rule 62
	'to'           reduce using rule 62
	'|'            reduce using rule 62
	%eof           reduce using rule 62


State 141

	Expr1 -> Expr1 '+' Expr2 .                          (rule 61)
	Expr2 -> Expr2 . '*' Expr3                          (rule 64)
	Expr2 -> Expr2 . '/' Expr3                          (rule 65)

	'!='           reduce using rule 61
	'&'            reduce using rule 61
	')'            reduce using rule 61
	'*'            shift, and enter state 106
	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'/'            shift, and enter state 107
	':'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'?'            reduce using rule 61
	'catch'        reduce using rule 61
	'do'           reduce using rule 61
	'else'         reduce using rule 61
	'end'          reduce using rule 61
	'from'         reduce using rule 61
	'in'           reduce using rule 61
	'then'         reduce using rule 61
	'to'           reduce using rule 61
	'|'            reduce using rule 61
	%eof           reduce using rule 61


State 142

	BExpr2 -> Expr1 '!=' Expr1 .                        (rule 55)
	Expr1 -> Expr1 . '+' Expr2                          (rule 61)
	Expr1 -> Expr1 . '-' Expr2                          (rule 62)

	'&'            reduce using rule 55
	')'            reduce using rule 55
	'+'            shift, and enter state 98
	'-'            shift, and enter state 99
	'?'            reduce using rule 55
	'do'           reduce using rule 55
	'then'         reduce using rule 55
	'|'            reduce using rule 55
	%eof           reduce using rule 55


State 143

	BExpr -> BExpr '|' BExpr1 .                         (rule 46)

	'&'            reduce using rule 46
	')'            reduce using rule 46
	'?'            reduce using rule 46
	'do'           reduce using rule 46
	'then'         reduce using rule 46
	'|'            reduce using rule 46
	%eof           reduce using rule 46


State 144

	BExpr -> BExpr '&' BExpr1 .                         (rule 45)

	'&'            reduce using rule 45
	')'            reduce using rule 45
	'?'            reduce using rule 45
	'do'           reduce using rule 45
	'then'         reduce using rule 45
	'|'            reduce using rule 45
	%eof           reduce using rule 45


State 145

	Stmt2 -> 'for' Ident ',' . Ident 'in' Ident 'do' Stmt 'end'    (rule 44)

	L_Ident        shift, and enter state 21

	Ident          goto state 169

State 146

	Stmt2 -> 'for' Ident 'from' . Expr 'to' Expr 'do' Stmt 'end'    (rule 41)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr          goto state 38
	BExpr1         goto state 39
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 42
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45
	Expr           goto state 168

State 147

	Stmt2 -> 'for' Ident 'in' . 'keys' Ident 'do' Stmt 'end'    (rule 42)
	Stmt2 -> 'for' Ident 'in' . 'values' Ident 'do' Stmt 'end'    (rule 43)

	'keys'         shift, and enter state 166
	'values'       shift, and enter state 167


State 148

	Stmt2 -> 'if' BExpr 'then' . Stmt 'else' Stmt 'end'    (rule 38)
	Stmt2 -> 'if' BExpr 'then' . Stmt 'end'             (rule 39)

	'begin'        shift, and enter state 75
	'call'         shift, and enter state 76
	'del'          shift, and enter state 71
	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'print'        shift, and enter state 77
	'set'          shift, and enter state 72
	'try'          shift, and enter state 78
	'while'        shift, and enter state 68

	Stmt           goto state 165
	Stmt1          goto state 74
	Stmt2          goto state 70

State 149

	Stmt2 -> 'while' BExpr 'do' . Stmt1                 (rule 40)

	'del'          shift, and enter state 71
	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'set'          shift, and enter state 72
	'while'        shift, and enter state 68

	Stmt1          goto state 164
	Stmt2          goto state 70

State 150

	Stmt1 -> 'del' Expr 'from' . Ident                  (rule 36)

	L_Ident        shift, and enter state 21

	Ident          goto state 163

State 151

	Stmt1 -> 'set' Var 'to' . Expr                      (rule 33)
	Stmt1 -> 'set' Var 'to' . 'call' Ident              (rule 34)
	Stmt1 -> 'set' Var 'to' . 'call' Ident 'with' Arg    (rule 35)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'call'         shift, and enter state 162
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr          goto state 38
	BExpr1         goto state 39
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 42
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45
	Expr           goto state 161

State 152

	Stmt -> Stmt1 ';' Stmt .                            (rule 31)

	'catch'        reduce using rule 31
	'else'         reduce using rule 31
	'end'          reduce using rule 31
	%eof           reduce using rule 31


State 153

	Stmt -> 'begin' Decl ';' . Stmt 'end'               (rule 29)
	Decl -> Decl ';' . Decl1                            (rule 87)

	'begin'        shift, and enter state 75
	'call'         shift, and enter state 76
	'del'          shift, and enter state 71
	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'let'          shift, and enter state 24
	'print'        shift, and enter state 77
	'set'          shift, and enter state 72
	'try'          shift, and enter state 78
	'while'        shift, and enter state 68

	Stmt           goto state 160
	Stmt1          goto state 74
	Stmt2          goto state 70
	Decl1          goto state 121

State 154

	Stmt -> 'call' Ident 'with' . Arg                   (rule 27)

	L_Ident        shift, and enter state 21

	Ident          goto state 79
	Arg            goto state 159

State 155

	Stmt -> 'try' Stmt 'catch' . Stmt 'end'             (rule 30)

	'begin'        shift, and enter state 75
	'call'         shift, and enter state 76
	'del'          shift, and enter state 71
	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'print'        shift, and enter state 77
	'set'          shift, and enter state 72
	'try'          shift, and enter state 78
	'while'        shift, and enter state 68

	Stmt           goto state 158
	Stmt1          goto state 74
	Stmt2          goto state 70

State 156

	Arg -> Ident ',' Arg .                              (rule 25)

	';'            reduce using rule 25
	'catch'        reduce using rule 25
	'else'         reduce using rule 25
	'end'          reduce using rule 25
	%eof           reduce using rule 25


State 157

	Var -> Ident 'at' Expr .                            (rule 23)

	'to'           reduce using rule 23
	%eof           reduce using rule 23


State 158

	Stmt -> 'try' Stmt 'catch' Stmt . 'end'             (rule 30)

	'end'          shift, and enter state 193


State 159

	Stmt -> 'call' Ident 'with' Arg .                   (rule 27)

	'catch'        reduce using rule 27
	'else'         reduce using rule 27
	'end'          reduce using rule 27
	%eof           reduce using rule 27


State 160

	Stmt -> 'begin' Decl ';' Stmt . 'end'               (rule 29)

	'end'          shift, and enter state 192


State 161

	Stmt1 -> 'set' Var 'to' Expr .                      (rule 33)

	';'            reduce using rule 33
	'catch'        reduce using rule 33
	'else'         reduce using rule 33
	'end'          reduce using rule 33
	%eof           reduce using rule 33


State 162

	Stmt1 -> 'set' Var 'to' 'call' . Ident              (rule 34)
	Stmt1 -> 'set' Var 'to' 'call' . Ident 'with' Arg    (rule 35)

	L_Ident        shift, and enter state 21

	Ident          goto state 191

State 163

	Stmt1 -> 'del' Expr 'from' Ident .                  (rule 36)

	';'            reduce using rule 36
	'catch'        reduce using rule 36
	'else'         reduce using rule 36
	'end'          reduce using rule 36
	%eof           reduce using rule 36


State 164

	Stmt2 -> 'while' BExpr 'do' Stmt1 .                 (rule 40)

	';'            reduce using rule 40
	'catch'        reduce using rule 40
	'else'         reduce using rule 40
	'end'          reduce using rule 40
	%eof           reduce using rule 40


State 165

	Stmt2 -> 'if' BExpr 'then' Stmt . 'else' Stmt 'end'    (rule 38)
	Stmt2 -> 'if' BExpr 'then' Stmt . 'end'             (rule 39)

	'else'         shift, and enter state 189
	'end'          shift, and enter state 190


State 166

	Stmt2 -> 'for' Ident 'in' 'keys' . Ident 'do' Stmt 'end'    (rule 42)

	L_Ident        shift, and enter state 21

	Ident          goto state 188

State 167

	Stmt2 -> 'for' Ident 'in' 'values' . Ident 'do' Stmt 'end'    (rule 43)

	L_Ident        shift, and enter state 21

	Ident          goto state 187

State 168

	Stmt2 -> 'for' Ident 'from' Expr . 'to' Expr 'do' Stmt 'end'    (rule 41)

	'to'           shift, and enter state 186


State 169

	Stmt2 -> 'for' Ident ',' Ident . 'in' Ident 'do' Stmt 'end'    (rule 44)

	'in'           shift, and enter state 185


State 170

	BExpr2 -> 'check' Expr 'in' Ident .                 (rule 56)

	'&'            reduce using rule 56
	')'            reduce using rule 56
	'?'            reduce using rule 56
	'do'           reduce using rule 56
	'then'         reduce using rule 56
	'|'            reduce using rule 56
	%eof           reduce using rule 56


State 171

	Expr -> BExpr '?' Expr1 ':' . Expr1                 (rule 72)

	'('            shift, and enter state 55
	'-'            shift, and enter state 49
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	Expr1          goto state 184
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45

State 172

	CType -> 'array' 'of' Integer Type .                (rule 76)

	';'            reduce using rule 76
	%eof           reduce using rule 76


State 173

	ADecl -> Ident 'of' Type ',' . ADecl                (rule 79)

	L_Ident        shift, and enter state 21

	Ident          goto state 28
	ADecl          goto state 183

State 174

	FDecl -> 'fun' 'from' ADecl 'to' . 'void'           (rule 82)
	FDecl -> 'fun' 'from' ADecl 'to' . Ident 'of' Type    (rule 83)

	'void'         shift, and enter state 182
	L_Ident        shift, and enter state 21

	Ident          goto state 181

State 175

	FDecl -> 'fun' 'to' Ident 'of' . Type               (rule 81)

	'bool'         shift, and enter state 34
	'int'          shift, and enter state 35

	Type           goto state 180

State 176

	Decl1 -> 'let' Ident 'be' Type .                    (rule 84)

	';'            reduce using rule 84
	%eof           reduce using rule 84


State 177

	Decl1 -> 'let' Ident 'be' CType .                   (rule 85)

	';'            reduce using rule 85
	%eof           reduce using rule 85


State 178

	Decl1 -> 'let' Ident 'be' FDecl . 'do' Stmt 'end'    (rule 86)

	'do'           shift, and enter state 179


State 179

	Decl1 -> 'let' Ident 'be' FDecl 'do' . Stmt 'end'    (rule 86)

	'begin'        shift, and enter state 75
	'call'         shift, and enter state 76
	'del'          shift, and enter state 71
	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'print'        shift, and enter state 77
	'set'          shift, and enter state 72
	'try'          shift, and enter state 78
	'while'        shift, and enter state 68

	Stmt           goto state 201
	Stmt1          goto state 74
	Stmt2          goto state 70

State 180

	FDecl -> 'fun' 'to' Ident 'of' Type .               (rule 81)

	'do'           reduce using rule 81
	%eof           reduce using rule 81


State 181

	FDecl -> 'fun' 'from' ADecl 'to' Ident . 'of' Type    (rule 83)

	'of'           shift, and enter state 200


State 182

	FDecl -> 'fun' 'from' ADecl 'to' 'void' .           (rule 82)

	'do'           reduce using rule 82
	%eof           reduce using rule 82


State 183

	ADecl -> Ident 'of' Type ',' ADecl .                (rule 79)

	'to'           reduce using rule 79
	%eof           reduce using rule 79


State 184

	Expr1 -> Expr1 . '+' Expr2                          (rule 61)
	Expr1 -> Expr1 . '-' Expr2                          (rule 62)
	Expr -> BExpr '?' Expr1 ':' Expr1 .                 (rule 72)

	')'            reduce using rule 72
	'+'            shift, and enter state 98
	'-'            shift, and enter state 99
	';'            reduce using rule 72
	'catch'        reduce using rule 72
	'do'           reduce using rule 72
	'else'         reduce using rule 72
	'end'          reduce using rule 72
	'from'         reduce using rule 72
	'in'           reduce using rule 72
	'to'           reduce using rule 72
	%eof           reduce using rule 72


State 185

	Stmt2 -> 'for' Ident ',' Ident 'in' . Ident 'do' Stmt 'end'    (rule 44)

	L_Ident        shift, and enter state 21

	Ident          goto state 199

State 186

	Stmt2 -> 'for' Ident 'from' Expr 'to' . Expr 'do' Stmt 'end'    (rule 41)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'check'        shift, and enter state 50
	'false'        shift, and enter state 51
	'true'         shift, and enter state 52
	L_Ident        shift, and enter state 21
	L_integ        shift, and enter state 53

	Ident          goto state 36
	Integer        goto state 37
	BExpr          goto state 38
	BExpr1         goto state 39
	BExpr2         goto state 40
	BExpr3         goto state 41
	Expr1          goto state 42
	Expr2          goto state 43
	Expr3          goto state 44
	Expr4          goto state 45
	Expr           goto state 198

State 187

	Stmt2 -> 'for' Ident 'in' 'values' Ident . 'do' Stmt 'end'    (rule 43)

	'do'           shift, and enter state 197


State 188

	Stmt2 -> 'for' Ident 'in' 'keys' Ident . 'do' Stmt 'end'    (rule 42)

	'do'           shift, and enter state 196


State 189

	Stmt2 -> 'if' BExpr 'then' Stmt 'else' . Stmt 'end'    (rule 38)

	'begin'        shift, and enter state 75
	'call'         shift, and enter state 76
	'del'          shift, and enter state 71
	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'print'        shift, and enter state 77
	'set'          shift, and enter state 72
	'try'          shift, and enter state 78
	'while'        shift, and enter state 68

	Stmt           goto state 195
	Stmt1          goto state 74
	Stmt2          goto state 70

State 190

	Stmt2 -> 'if' BExpr 'then' Stmt 'end' .             (rule 39)

	';'            reduce using rule 39
	'catch'        reduce using rule 39
	'else'         reduce using rule 39
	'end'          reduce using rule 39
	%eof           reduce using rule 39


State 191

	Stmt1 -> 'set' Var 'to' 'call' Ident .              (rule 34)
	Stmt1 -> 'set' Var 'to' 'call' Ident . 'with' Arg    (rule 35)

	';'            reduce using rule 34
	'catch'        reduce using rule 34
	'else'         reduce using rule 34
	'end'          reduce using rule 34
	'with'         shift, and enter state 194
	%eof           reduce using rule 34


State 192

	Stmt -> 'begin' Decl ';' Stmt 'end' .               (rule 29)

	'catch'        reduce using rule 29
	'else'         reduce using rule 29
	'end'          reduce using rule 29
	%eof           reduce using rule 29


State 193

	Stmt -> 'try' Stmt 'catch' Stmt 'end' .             (rule 30)

	'catch'        reduce using rule 30
	'else'         reduce using rule 30
	'end'          reduce using rule 30
	%eof           reduce using rule 30


State 194

	Stmt1 -> 'set' Var 'to' 'call' Ident 'with' . Arg    (rule 35)

	L_Ident        shift, and enter state 21

	Ident          goto state 79
	Arg            goto state 209

State 195

	Stmt2 -> 'if' BExpr 'then' Stmt 'else' Stmt . 'end'    (rule 38)

	'end'          shift, and enter state 208


State 196

	Stmt2 -> 'for' Ident 'in' 'keys' Ident 'do' . Stmt 'end'    (rule 42)

	'begin'        shift, and enter state 75
	'call'         shift, and enter state 76
	'del'          shift, and enter state 71
	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'print'        shift, and enter state 77
	'set'          shift, and enter state 72
	'try'          shift, and enter state 78
	'while'        shift, and enter state 68

	Stmt           goto state 207
	Stmt1          goto state 74
	Stmt2          goto state 70

State 197

	Stmt2 -> 'for' Ident 'in' 'values' Ident 'do' . Stmt 'end'    (rule 43)

	'begin'        shift, and enter state 75
	'call'         shift, and enter state 76
	'del'          shift, and enter state 71
	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'print'        shift, and enter state 77
	'set'          shift, and enter state 72
	'try'          shift, and enter state 78
	'while'        shift, and enter state 68

	Stmt           goto state 206
	Stmt1          goto state 74
	Stmt2          goto state 70

State 198

	Stmt2 -> 'for' Ident 'from' Expr 'to' Expr . 'do' Stmt 'end'    (rule 41)

	'do'           shift, and enter state 205


State 199

	Stmt2 -> 'for' Ident ',' Ident 'in' Ident . 'do' Stmt 'end'    (rule 44)

	'do'           shift, and enter state 204


State 200

	FDecl -> 'fun' 'from' ADecl 'to' Ident 'of' . Type    (rule 83)

	'bool'         shift, and enter state 34
	'int'          shift, and enter state 35

	Type           goto state 203

State 201

	Decl1 -> 'let' Ident 'be' FDecl 'do' Stmt . 'end'    (rule 86)

	'end'          shift, and enter state 202


State 202

	Decl1 -> 'let' Ident 'be' FDecl 'do' Stmt 'end' .    (rule 86)

	';'            reduce using rule 86
	%eof           reduce using rule 86


State 203

	FDecl -> 'fun' 'from' ADecl 'to' Ident 'of' Type .    (rule 83)

	'do'           reduce using rule 83
	%eof           reduce using rule 83


State 204

	Stmt2 -> 'for' Ident ',' Ident 'in' Ident 'do' . Stmt 'end'    (rule 44)

	'begin'        shift, and enter state 75
	'call'         shift, and enter state 76
	'del'          shift, and enter state 71
	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'print'        shift, and enter state 77
	'set'          shift, and enter state 72
	'try'          shift, and enter state 78
	'while'        shift, and enter state 68

	Stmt           goto state 213
	Stmt1          goto state 74
	Stmt2          goto state 70

State 205

	Stmt2 -> 'for' Ident 'from' Expr 'to' Expr 'do' . Stmt 'end'    (rule 41)

	'begin'        shift, and enter state 75
	'call'         shift, and enter state 76
	'del'          shift, and enter state 71
	'for'          shift, and enter state 66
	'if'           shift, and enter state 67
	'print'        shift, and enter state 77
	'set'          shift, and enter state 72
	'try'          shift, and enter state 78
	'while'        shift, and enter state 68

	Stmt           goto state 212
	Stmt1          goto state 74
	Stmt2          goto state 70

State 206

	Stmt2 -> 'for' Ident 'in' 'values' Ident 'do' Stmt . 'end'    (rule 43)

	'end'          shift, and enter state 211


State 207

	Stmt2 -> 'for' Ident 'in' 'keys' Ident 'do' Stmt . 'end'    (rule 42)

	'end'          shift, and enter state 210


State 208

	Stmt2 -> 'if' BExpr 'then' Stmt 'else' Stmt 'end' .    (rule 38)

	';'            reduce using rule 38
	'catch'        reduce using rule 38
	'else'         reduce using rule 38
	'end'          reduce using rule 38
	%eof           reduce using rule 38


State 209

	Stmt1 -> 'set' Var 'to' 'call' Ident 'with' Arg .    (rule 35)

	';'            reduce using rule 35
	'catch'        reduce using rule 35
	'else'         reduce using rule 35
	'end'          reduce using rule 35
	%eof           reduce using rule 35


State 210

	Stmt2 -> 'for' Ident 'in' 'keys' Ident 'do' Stmt 'end' .    (rule 42)

	';'            reduce using rule 42
	'catch'        reduce using rule 42
	'else'         reduce using rule 42
	'end'          reduce using rule 42
	%eof           reduce using rule 42


State 211

	Stmt2 -> 'for' Ident 'in' 'values' Ident 'do' Stmt 'end' .    (rule 43)

	';'            reduce using rule 43
	'catch'        reduce using rule 43
	'else'         reduce using rule 43
	'end'          reduce using rule 43
	%eof           reduce using rule 43


State 212

	Stmt2 -> 'for' Ident 'from' Expr 'to' Expr 'do' Stmt . 'end'    (rule 41)

	'end'          shift, and enter state 215


State 213

	Stmt2 -> 'for' Ident ',' Ident 'in' Ident 'do' Stmt . 'end'    (rule 44)

	'end'          shift, and enter state 214


State 214

	Stmt2 -> 'for' Ident ',' Ident 'in' Ident 'do' Stmt 'end' .    (rule 44)

	';'            reduce using rule 44
	'catch'        reduce using rule 44
	'else'         reduce using rule 44
	'end'          reduce using rule 44
	%eof           reduce using rule 44


State 215

	Stmt2 -> 'for' Ident 'from' Expr 'to' Expr 'do' Stmt 'end' .    (rule 41)

	';'            reduce using rule 41
	'catch'        reduce using rule 41
	'else'         reduce using rule 41
	'end'          reduce using rule 41
	%eof           reduce using rule 41


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 89
Number of terminals: 54
Number of non-terminals: 42
Number of states: 216
