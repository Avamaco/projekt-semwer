-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Jezyk/Par.y
-----------------------------------------------------------------------------

state 18 contains 1 shift/reduce conflicts.
state 97 contains 3 shift/reduce conflicts.
state 173 contains 3 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pVar -> Var                                 (0)
	%start_pArg -> Arg                                 (1)
	%start_pStmt -> Stmt                               (2)
	%start_pStmt1 -> Stmt1                             (3)
	%start_pStmt2 -> Stmt2                             (4)
	%start_pBExpr -> BExpr                             (5)
	%start_pBExpr1 -> BExpr1                           (6)
	%start_pExpr -> Expr                               (7)
	%start_pExpr1 -> Expr1                             (8)
	%start_pExpr2 -> Expr2                             (9)
	%start_pType -> Type                               (10)
	%start_pCType -> CType                             (11)
	%start_pADecl -> ADecl                             (12)
	%start_pFDecl -> FDecl                             (13)
	%start_pDecl1 -> Decl1                             (14)
	%start_pDecl -> Decl                               (15)
	Ident -> L_Ident                                   (16)
	Integer -> L_integ                                 (17)
	Var -> Ident                                       (18)
	Var -> Ident 'at' Expr                             (19)
	Arg -> Ident                                       (20)
	Arg -> Ident ',' Arg                               (21)
	Stmt -> 'call' Ident                               (22)
	Stmt -> 'call' Ident 'with' Arg                    (23)
	Stmt -> 'print' Ident                              (24)
	Stmt -> 'begin' Decl ';' Stmt 'end'                (25)
	Stmt -> 'try' Stmt 'catch' Stmt 'end'              (26)
	Stmt -> Stmt1 ';' Stmt                             (27)
	Stmt -> Stmt1                                      (28)
	Stmt1 -> 'set' Var 'to' Expr                       (29)
	Stmt1 -> 'set' Var 'to' 'call' Ident               (30)
	Stmt1 -> 'set' Var 'to' 'call' Ident 'with' Arg    (31)
	Stmt1 -> 'del' Expr 'from' Ident                   (32)
	Stmt1 -> Stmt2                                     (33)
	Stmt2 -> 'if' BExpr 'then' Stmt 'else' Stmt 'end'   (34)
	Stmt2 -> 'if' BExpr 'then' Stmt 'end'              (35)
	Stmt2 -> 'while' BExpr 'do' Stmt1                  (36)
	Stmt2 -> 'for' Ident 'from' Expr 'to' Expr 'do' Stmt 'end'   (37)
	Stmt2 -> 'for' Ident 'in' 'keys' Ident 'do' Stmt 'end'   (38)
	Stmt2 -> 'for' Ident 'in' 'values' Ident 'do' Stmt 'end'   (39)
	Stmt2 -> 'for' Ident ',' Ident 'in' Ident 'do' Stmt 'end'   (40)
	BExpr -> BExpr '&' BExpr1                          (41)
	BExpr -> BExpr '|' BExpr1                          (42)
	BExpr -> 'check' Expr 'in' Ident                   (43)
	BExpr -> BExpr1                                    (44)
	BExpr1 -> '!' BExpr1                               (45)
	BExpr1 -> Expr '=' Expr                            (46)
	BExpr1 -> Expr '<' Expr                            (47)
	BExpr1 -> Expr '<=' Expr                           (48)
	BExpr1 -> Expr '>' Expr                            (49)
	BExpr1 -> Expr '>=' Expr                           (50)
	BExpr1 -> Expr '!=' Expr                           (51)
	BExpr1 -> 'true'                                   (52)
	BExpr1 -> 'false'                                  (53)
	BExpr1 -> '(' BExpr ')'                            (54)
	Expr -> Expr '+' Expr1                             (55)
	Expr -> Expr '-' Expr1                             (56)
	Expr -> '-' Expr                                   (57)
	Expr -> Expr '?' Expr ':' Expr                     (58)
	Expr -> Expr1                                      (59)
	Expr1 -> Expr1 '*' Expr2                           (60)
	Expr1 -> Expr1 '/' Expr2                           (61)
	Expr1 -> Expr2                                     (62)
	Expr2 -> Integer                                   (63)
	Expr2 -> Ident                                     (64)
	Expr2 -> '(' Expr ')'                              (65)
	Type -> 'bool'                                     (66)
	Type -> 'int'                                      (67)
	CType -> 'array' 'of' Integer Type                 (68)
	CType -> 'dict' 'of' Type                          (69)
	ADecl -> Ident 'of' Type                           (70)
	ADecl -> Ident 'of' Type ',' ADecl                 (71)
	FDecl -> 'fun' 'to' 'void'                         (72)
	FDecl -> 'fun' 'to' Ident 'of' Type                (73)
	FDecl -> 'fun' 'from' ADecl 'to' 'void'            (74)
	FDecl -> 'fun' 'from' ADecl 'to' Ident 'of' Type   (75)
	Decl1 -> 'let' Ident 'be' Type                     (76)
	Decl1 -> 'let' Ident 'be' CType                    (77)
	Decl1 -> 'elt' Ident 'be' FDecl 'do' Stmt 'end'    (78)
	Decl -> Decl1 ';' Decl                             (79)
	Decl -> Decl1                                      (80)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'&'            { PT _ (TS _ 3) }
	'('            { PT _ (TS _ 4) }
	')'            { PT _ (TS _ 5) }
	'*'            { PT _ (TS _ 6) }
	'+'            { PT _ (TS _ 7) }
	','            { PT _ (TS _ 8) }
	'-'            { PT _ (TS _ 9) }
	'/'            { PT _ (TS _ 10) }
	':'            { PT _ (TS _ 11) }
	';'            { PT _ (TS _ 12) }
	'<'            { PT _ (TS _ 13) }
	'<='           { PT _ (TS _ 14) }
	'='            { PT _ (TS _ 15) }
	'>'            { PT _ (TS _ 16) }
	'>='           { PT _ (TS _ 17) }
	'?'            { PT _ (TS _ 18) }
	'array'        { PT _ (TS _ 19) }
	'at'           { PT _ (TS _ 20) }
	'be'           { PT _ (TS _ 21) }
	'begin'        { PT _ (TS _ 22) }
	'bool'         { PT _ (TS _ 23) }
	'call'         { PT _ (TS _ 24) }
	'catch'        { PT _ (TS _ 25) }
	'check'        { PT _ (TS _ 26) }
	'del'          { PT _ (TS _ 27) }
	'dict'         { PT _ (TS _ 28) }
	'do'           { PT _ (TS _ 29) }
	'else'         { PT _ (TS _ 30) }
	'elt'          { PT _ (TS _ 31) }
	'end'          { PT _ (TS _ 32) }
	'false'        { PT _ (TS _ 33) }
	'for'          { PT _ (TS _ 34) }
	'from'         { PT _ (TS _ 35) }
	'fun'          { PT _ (TS _ 36) }
	'if'           { PT _ (TS _ 37) }
	'in'           { PT _ (TS _ 38) }
	'int'          { PT _ (TS _ 39) }
	'keys'         { PT _ (TS _ 40) }
	'let'          { PT _ (TS _ 41) }
	'of'           { PT _ (TS _ 42) }
	'print'        { PT _ (TS _ 43) }
	'set'          { PT _ (TS _ 44) }
	'then'         { PT _ (TS _ 45) }
	'to'           { PT _ (TS _ 46) }
	'true'         { PT _ (TS _ 47) }
	'try'          { PT _ (TS _ 48) }
	'values'       { PT _ (TS _ 49) }
	'void'         { PT _ (TS _ 50) }
	'while'        { PT _ (TS _ 51) }
	'with'         { PT _ (TS _ 52) }
	'|'            { PT _ (TS _ 53) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pVar     rule  0
	%start_pArg     rule  1
	%start_pStmt    rule  2
	%start_pStmt1   rule  3
	%start_pStmt2   rule  4
	%start_pBExpr   rule  5
	%start_pBExpr1  rule  6
	%start_pExpr    rule  7
	%start_pExpr1   rule  8
	%start_pExpr2   rule  9
	%start_pType    rule  10
	%start_pCType   rule  11
	%start_pADecl   rule  12
	%start_pFDecl   rule  13
	%start_pDecl1   rule  14
	%start_pDecl    rule  15
	Ident           rule  16
	Integer         rule  17
	Var             rules 18, 19
	Arg             rules 20, 21
	Stmt            rules 22, 23, 24, 25, 26, 27, 28
	Stmt1           rules 29, 30, 31, 32, 33
	Stmt2           rules 34, 35, 36, 37, 38, 39, 40
	BExpr           rules 41, 42, 43, 44
	BExpr1          rules 45, 46, 47, 48, 49, 50, 51, 52, 53, 54
	Expr            rules 55, 56, 57, 58, 59
	Expr1           rules 60, 61, 62
	Expr2           rules 63, 64, 65
	Type            rules 66, 67
	CType           rules 68, 69
	ADecl           rules 70, 71
	FDecl           rules 72, 73, 74, 75
	Decl1           rules 76, 77, 78
	Decl            rules 79, 80

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pVar -> . Var                                (rule 0)

	L_Ident        shift, and enter state 17

	Ident          goto state 68
	Var            goto state 69

State 1

	%start_pArg -> . Arg                                (rule 1)

	L_Ident        shift, and enter state 17

	Ident          goto state 66
	Arg            goto state 67

State 2

	%start_pStmt -> . Stmt                              (rule 2)

	'begin'        shift, and enter state 62
	'call'         shift, and enter state 63
	'del'          shift, and enter state 58
	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'print'        shift, and enter state 64
	'set'          shift, and enter state 59
	'try'          shift, and enter state 65
	'while'        shift, and enter state 55

	Stmt           goto state 60
	Stmt1          goto state 61
	Stmt2          goto state 57

State 3

	%start_pStmt1 -> . Stmt1                            (rule 3)

	'del'          shift, and enter state 58
	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'set'          shift, and enter state 59
	'while'        shift, and enter state 55

	Stmt1          goto state 56
	Stmt2          goto state 57

State 4

	%start_pStmt2 -> . Stmt2                            (rule 4)

	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'while'        shift, and enter state 55

	Stmt2          goto state 52

State 5

	%start_pBExpr -> . BExpr                            (rule 5)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 42
	'check'        shift, and enter state 51
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	BExpr          goto state 49
	BExpr1         goto state 50
	Expr           goto state 44
	Expr1          goto state 41
	Expr2          goto state 39

State 6

	%start_pBExpr1 -> . BExpr1                          (rule 6)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 42
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	BExpr1         goto state 43
	Expr           goto state 44
	Expr1          goto state 41
	Expr2          goto state 39

State 7

	%start_pExpr -> . Expr                              (rule 7)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 40
	Expr1          goto state 41
	Expr2          goto state 39

State 8

	%start_pExpr1 -> . Expr1                            (rule 8)

	'('            shift, and enter state 36
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr1          goto state 38
	Expr2          goto state 39

State 9

	%start_pExpr2 -> . Expr2                            (rule 9)

	'('            shift, and enter state 36
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr2          goto state 35

State 10

	%start_pType -> . Type                              (rule 10)

	'bool'         shift, and enter state 31
	'int'          shift, and enter state 32

	Type           goto state 30

State 11

	%start_pCType -> . CType                            (rule 11)

	'array'        shift, and enter state 28
	'dict'         shift, and enter state 29

	CType          goto state 27

State 12

	%start_pADecl -> . ADecl                            (rule 12)

	L_Ident        shift, and enter state 17

	Ident          goto state 25
	ADecl          goto state 26

State 13

	%start_pFDecl -> . FDecl                            (rule 13)

	'fun'          shift, and enter state 24

	FDecl          goto state 23

State 14

	%start_pDecl1 -> . Decl1                            (rule 14)

	'elt'          shift, and enter state 20
	'let'          shift, and enter state 21

	Decl1          goto state 22

State 15

	%start_pDecl -> . Decl                              (rule 15)

	'elt'          shift, and enter state 20
	'let'          shift, and enter state 21

	Decl1          goto state 18
	Decl           goto state 19

State 16

	Ident -> . L_Ident                                  (rule 16)

	L_Ident        shift, and enter state 17


State 17

	Ident -> L_Ident .                                  (rule 16)

	'!='           reduce using rule 16
	'&'            reduce using rule 16
	')'            reduce using rule 16
	'*'            reduce using rule 16
	'+'            reduce using rule 16
	','            reduce using rule 16
	'-'            reduce using rule 16
	'/'            reduce using rule 16
	':'            reduce using rule 16
	';'            reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'='            reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'?'            reduce using rule 16
	'at'           reduce using rule 16
	'be'           reduce using rule 16
	'catch'        reduce using rule 16
	'do'           reduce using rule 16
	'else'         reduce using rule 16
	'end'          reduce using rule 16
	'from'         reduce using rule 16
	'in'           reduce using rule 16
	'of'           reduce using rule 16
	'then'         reduce using rule 16
	'to'           reduce using rule 16
	'with'         reduce using rule 16
	'|'            reduce using rule 16
	%eof           reduce using rule 16


State 18

	Decl -> Decl1 . ';' Decl                            (rule 79)
	Decl -> Decl1 .                                     (rule 80)

	';'            shift, and enter state 108
			(reduce using rule 80)

	%eof           reduce using rule 80


State 19

	%start_pDecl -> Decl .                              (rule 15)

	%eof           accept


State 20

	Decl1 -> 'elt' . Ident 'be' FDecl 'do' Stmt 'end'    (rule 78)

	L_Ident        shift, and enter state 17

	Ident          goto state 107

State 21

	Decl1 -> 'let' . Ident 'be' Type                    (rule 76)
	Decl1 -> 'let' . Ident 'be' CType                   (rule 77)

	L_Ident        shift, and enter state 17

	Ident          goto state 106

State 22

	%start_pDecl1 -> Decl1 .                            (rule 14)

	%eof           accept


State 23

	%start_pFDecl -> FDecl .                            (rule 13)

	%eof           accept


State 24

	FDecl -> 'fun' . 'to' 'void'                        (rule 72)
	FDecl -> 'fun' . 'to' Ident 'of' Type               (rule 73)
	FDecl -> 'fun' . 'from' ADecl 'to' 'void'           (rule 74)
	FDecl -> 'fun' . 'from' ADecl 'to' Ident 'of' Type    (rule 75)

	'from'         shift, and enter state 104
	'to'           shift, and enter state 105


State 25

	ADecl -> Ident . 'of' Type                          (rule 70)
	ADecl -> Ident . 'of' Type ',' ADecl                (rule 71)

	'of'           shift, and enter state 103


State 26

	%start_pADecl -> ADecl .                            (rule 12)

	%eof           accept


State 27

	%start_pCType -> CType .                            (rule 11)

	%eof           accept


State 28

	CType -> 'array' . 'of' Integer Type                (rule 68)

	'of'           shift, and enter state 102


State 29

	CType -> 'dict' . 'of' Type                         (rule 69)

	'of'           shift, and enter state 101


State 30

	%start_pType -> Type .                              (rule 10)

	%eof           accept


State 31

	Type -> 'bool' .                                    (rule 66)

	','            reduce using rule 66
	';'            reduce using rule 66
	'do'           reduce using rule 66
	'to'           reduce using rule 66
	%eof           reduce using rule 66


State 32

	Type -> 'int' .                                     (rule 67)

	','            reduce using rule 67
	';'            reduce using rule 67
	'do'           reduce using rule 67
	'to'           reduce using rule 67
	%eof           reduce using rule 67


State 33

	Expr2 -> Ident .                                    (rule 64)

	'!='           reduce using rule 64
	'&'            reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	':'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'?'            reduce using rule 64
	'catch'        reduce using rule 64
	'do'           reduce using rule 64
	'else'         reduce using rule 64
	'end'          reduce using rule 64
	'from'         reduce using rule 64
	'in'           reduce using rule 64
	'then'         reduce using rule 64
	'to'           reduce using rule 64
	'|'            reduce using rule 64
	%eof           reduce using rule 64


State 34

	Expr2 -> Integer .                                  (rule 63)

	'!='           reduce using rule 63
	'&'            reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	':'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'?'            reduce using rule 63
	'catch'        reduce using rule 63
	'do'           reduce using rule 63
	'else'         reduce using rule 63
	'end'          reduce using rule 63
	'from'         reduce using rule 63
	'in'           reduce using rule 63
	'then'         reduce using rule 63
	'to'           reduce using rule 63
	'|'            reduce using rule 63
	%eof           reduce using rule 63


State 35

	%start_pExpr2 -> Expr2 .                            (rule 9)

	%eof           accept


State 36

	Expr2 -> '(' . Expr ')'                             (rule 65)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 100
	Expr1          goto state 41
	Expr2          goto state 39

State 37

	Integer -> L_integ .                                (rule 17)

	'!='           reduce using rule 17
	'&'            reduce using rule 17
	')'            reduce using rule 17
	'*'            reduce using rule 17
	'+'            reduce using rule 17
	'-'            reduce using rule 17
	'/'            reduce using rule 17
	':'            reduce using rule 17
	';'            reduce using rule 17
	'<'            reduce using rule 17
	'<='           reduce using rule 17
	'='            reduce using rule 17
	'>'            reduce using rule 17
	'>='           reduce using rule 17
	'?'            reduce using rule 17
	'bool'         reduce using rule 17
	'catch'        reduce using rule 17
	'do'           reduce using rule 17
	'else'         reduce using rule 17
	'end'          reduce using rule 17
	'from'         reduce using rule 17
	'in'           reduce using rule 17
	'int'          reduce using rule 17
	'then'         reduce using rule 17
	'to'           reduce using rule 17
	'|'            reduce using rule 17
	%eof           reduce using rule 17


State 38

	%start_pExpr1 -> Expr1 .                            (rule 8)
	Expr1 -> Expr1 . '*' Expr2                          (rule 60)
	Expr1 -> Expr1 . '/' Expr2                          (rule 61)

	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	%eof           accept


State 39

	Expr1 -> Expr2 .                                    (rule 62)

	'!='           reduce using rule 62
	'&'            reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	':'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'?'            reduce using rule 62
	'catch'        reduce using rule 62
	'do'           reduce using rule 62
	'else'         reduce using rule 62
	'end'          reduce using rule 62
	'from'         reduce using rule 62
	'in'           reduce using rule 62
	'then'         reduce using rule 62
	'to'           reduce using rule 62
	'|'            reduce using rule 62
	%eof           reduce using rule 62


State 40

	%start_pExpr -> Expr .                              (rule 7)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'?'            shift, and enter state 96
	%eof           accept


State 41

	Expr -> Expr1 .                                     (rule 59)
	Expr1 -> Expr1 . '*' Expr2                          (rule 60)
	Expr1 -> Expr1 . '/' Expr2                          (rule 61)

	'!='           reduce using rule 59
	'&'            reduce using rule 59
	')'            reduce using rule 59
	'*'            shift, and enter state 98
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'/'            shift, and enter state 99
	':'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'?'            reduce using rule 59
	'catch'        reduce using rule 59
	'do'           reduce using rule 59
	'else'         reduce using rule 59
	'end'          reduce using rule 59
	'from'         reduce using rule 59
	'in'           reduce using rule 59
	'then'         reduce using rule 59
	'to'           reduce using rule 59
	'|'            reduce using rule 59
	%eof           reduce using rule 59


State 42

	Expr -> '-' . Expr                                  (rule 57)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 97
	Expr1          goto state 41
	Expr2          goto state 39

State 43

	%start_pBExpr1 -> BExpr1 .                          (rule 6)

	%eof           accept


State 44

	BExpr1 -> Expr . '=' Expr                           (rule 46)
	BExpr1 -> Expr . '<' Expr                           (rule 47)
	BExpr1 -> Expr . '<=' Expr                          (rule 48)
	BExpr1 -> Expr . '>' Expr                           (rule 49)
	BExpr1 -> Expr . '>=' Expr                          (rule 50)
	BExpr1 -> Expr . '!=' Expr                          (rule 51)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'!='           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'<'            shift, and enter state 91
	'<='           shift, and enter state 92
	'='            shift, and enter state 93
	'>'            shift, and enter state 94
	'>='           shift, and enter state 95
	'?'            shift, and enter state 96


State 45

	BExpr1 -> '!' . BExpr1                              (rule 45)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 42
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	BExpr1         goto state 87
	Expr           goto state 44
	Expr1          goto state 41
	Expr2          goto state 39

State 46

	BExpr1 -> '(' . BExpr ')'                           (rule 54)
	Expr2 -> '(' . Expr ')'                             (rule 65)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 42
	'check'        shift, and enter state 51
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	BExpr          goto state 85
	BExpr1         goto state 50
	Expr           goto state 86
	Expr1          goto state 41
	Expr2          goto state 39

State 47

	BExpr1 -> 'false' .                                 (rule 53)

	'&'            reduce using rule 53
	')'            reduce using rule 53
	'do'           reduce using rule 53
	'then'         reduce using rule 53
	'|'            reduce using rule 53
	%eof           reduce using rule 53


State 48

	BExpr1 -> 'true' .                                  (rule 52)

	'&'            reduce using rule 52
	')'            reduce using rule 52
	'do'           reduce using rule 52
	'then'         reduce using rule 52
	'|'            reduce using rule 52
	%eof           reduce using rule 52


State 49

	%start_pBExpr -> BExpr .                            (rule 5)
	BExpr -> BExpr . '&' BExpr1                         (rule 41)
	BExpr -> BExpr . '|' BExpr1                         (rule 42)

	'&'            shift, and enter state 83
	'|'            shift, and enter state 84
	%eof           accept


State 50

	BExpr -> BExpr1 .                                   (rule 44)

	'&'            reduce using rule 44
	')'            reduce using rule 44
	'do'           reduce using rule 44
	'then'         reduce using rule 44
	'|'            reduce using rule 44
	%eof           reduce using rule 44


State 51

	BExpr -> 'check' . Expr 'in' Ident                  (rule 43)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 82
	Expr1          goto state 41
	Expr2          goto state 39

State 52

	%start_pStmt2 -> Stmt2 .                            (rule 4)

	%eof           accept


State 53

	Stmt2 -> 'for' . Ident 'from' Expr 'to' Expr 'do' Stmt 'end'    (rule 37)
	Stmt2 -> 'for' . Ident 'in' 'keys' Ident 'do' Stmt 'end'    (rule 38)
	Stmt2 -> 'for' . Ident 'in' 'values' Ident 'do' Stmt 'end'    (rule 39)
	Stmt2 -> 'for' . Ident ',' Ident 'in' Ident 'do' Stmt 'end'    (rule 40)

	L_Ident        shift, and enter state 17

	Ident          goto state 81

State 54

	Stmt2 -> 'if' . BExpr 'then' Stmt 'else' Stmt 'end'    (rule 34)
	Stmt2 -> 'if' . BExpr 'then' Stmt 'end'             (rule 35)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 42
	'check'        shift, and enter state 51
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	BExpr          goto state 80
	BExpr1         goto state 50
	Expr           goto state 44
	Expr1          goto state 41
	Expr2          goto state 39

State 55

	Stmt2 -> 'while' . BExpr 'do' Stmt1                 (rule 36)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 42
	'check'        shift, and enter state 51
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	BExpr          goto state 79
	BExpr1         goto state 50
	Expr           goto state 44
	Expr1          goto state 41
	Expr2          goto state 39

State 56

	%start_pStmt1 -> Stmt1 .                            (rule 3)

	%eof           accept


State 57

	Stmt1 -> Stmt2 .                                    (rule 33)

	';'            reduce using rule 33
	'catch'        reduce using rule 33
	'else'         reduce using rule 33
	'end'          reduce using rule 33
	%eof           reduce using rule 33


State 58

	Stmt1 -> 'del' . Expr 'from' Ident                  (rule 32)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 78
	Expr1          goto state 41
	Expr2          goto state 39

State 59

	Stmt1 -> 'set' . Var 'to' Expr                      (rule 29)
	Stmt1 -> 'set' . Var 'to' 'call' Ident              (rule 30)
	Stmt1 -> 'set' . Var 'to' 'call' Ident 'with' Arg    (rule 31)

	L_Ident        shift, and enter state 17

	Ident          goto state 68
	Var            goto state 77

State 60

	%start_pStmt -> Stmt .                              (rule 2)

	%eof           accept


State 61

	Stmt -> Stmt1 . ';' Stmt                            (rule 27)
	Stmt -> Stmt1 .                                     (rule 28)

	';'            shift, and enter state 76
	'catch'        reduce using rule 28
	'else'         reduce using rule 28
	'end'          reduce using rule 28
	%eof           reduce using rule 28


State 62

	Stmt -> 'begin' . Decl ';' Stmt 'end'               (rule 25)

	'elt'          shift, and enter state 20
	'let'          shift, and enter state 21

	Decl1          goto state 18
	Decl           goto state 75

State 63

	Stmt -> 'call' . Ident                              (rule 22)
	Stmt -> 'call' . Ident 'with' Arg                   (rule 23)

	L_Ident        shift, and enter state 17

	Ident          goto state 74

State 64

	Stmt -> 'print' . Ident                             (rule 24)

	L_Ident        shift, and enter state 17

	Ident          goto state 73

State 65

	Stmt -> 'try' . Stmt 'catch' Stmt 'end'             (rule 26)

	'begin'        shift, and enter state 62
	'call'         shift, and enter state 63
	'del'          shift, and enter state 58
	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'print'        shift, and enter state 64
	'set'          shift, and enter state 59
	'try'          shift, and enter state 65
	'while'        shift, and enter state 55

	Stmt           goto state 72
	Stmt1          goto state 61
	Stmt2          goto state 57

State 66

	Arg -> Ident .                                      (rule 20)
	Arg -> Ident . ',' Arg                              (rule 21)

	','            shift, and enter state 71
	';'            reduce using rule 20
	'catch'        reduce using rule 20
	'else'         reduce using rule 20
	'end'          reduce using rule 20
	%eof           reduce using rule 20


State 67

	%start_pArg -> Arg .                                (rule 1)

	%eof           accept


State 68

	Var -> Ident .                                      (rule 18)
	Var -> Ident . 'at' Expr                            (rule 19)

	'at'           shift, and enter state 70
	'to'           reduce using rule 18
	%eof           reduce using rule 18


State 69

	%start_pVar -> Var .                                (rule 0)

	%eof           accept


State 70

	Var -> Ident 'at' . Expr                            (rule 19)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 146
	Expr1          goto state 41
	Expr2          goto state 39

State 71

	Arg -> Ident ',' . Arg                              (rule 21)

	L_Ident        shift, and enter state 17

	Ident          goto state 66
	Arg            goto state 145

State 72

	Stmt -> 'try' Stmt . 'catch' Stmt 'end'             (rule 26)

	'catch'        shift, and enter state 144


State 73

	Stmt -> 'print' Ident .                             (rule 24)

	'catch'        reduce using rule 24
	'else'         reduce using rule 24
	'end'          reduce using rule 24
	%eof           reduce using rule 24


State 74

	Stmt -> 'call' Ident .                              (rule 22)
	Stmt -> 'call' Ident . 'with' Arg                   (rule 23)

	'catch'        reduce using rule 22
	'else'         reduce using rule 22
	'end'          reduce using rule 22
	'with'         shift, and enter state 143
	%eof           reduce using rule 22


State 75

	Stmt -> 'begin' Decl . ';' Stmt 'end'               (rule 25)

	';'            shift, and enter state 142


State 76

	Stmt -> Stmt1 ';' . Stmt                            (rule 27)

	'begin'        shift, and enter state 62
	'call'         shift, and enter state 63
	'del'          shift, and enter state 58
	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'print'        shift, and enter state 64
	'set'          shift, and enter state 59
	'try'          shift, and enter state 65
	'while'        shift, and enter state 55

	Stmt           goto state 141
	Stmt1          goto state 61
	Stmt2          goto state 57

State 77

	Stmt1 -> 'set' Var . 'to' Expr                      (rule 29)
	Stmt1 -> 'set' Var . 'to' 'call' Ident              (rule 30)
	Stmt1 -> 'set' Var . 'to' 'call' Ident 'with' Arg    (rule 31)

	'to'           shift, and enter state 140


State 78

	Stmt1 -> 'del' Expr . 'from' Ident                  (rule 32)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'?'            shift, and enter state 96
	'from'         shift, and enter state 139


State 79

	Stmt2 -> 'while' BExpr . 'do' Stmt1                 (rule 36)
	BExpr -> BExpr . '&' BExpr1                         (rule 41)
	BExpr -> BExpr . '|' BExpr1                         (rule 42)

	'&'            shift, and enter state 83
	'do'           shift, and enter state 138
	'|'            shift, and enter state 84


State 80

	Stmt2 -> 'if' BExpr . 'then' Stmt 'else' Stmt 'end'    (rule 34)
	Stmt2 -> 'if' BExpr . 'then' Stmt 'end'             (rule 35)
	BExpr -> BExpr . '&' BExpr1                         (rule 41)
	BExpr -> BExpr . '|' BExpr1                         (rule 42)

	'&'            shift, and enter state 83
	'then'         shift, and enter state 137
	'|'            shift, and enter state 84


State 81

	Stmt2 -> 'for' Ident . 'from' Expr 'to' Expr 'do' Stmt 'end'    (rule 37)
	Stmt2 -> 'for' Ident . 'in' 'keys' Ident 'do' Stmt 'end'    (rule 38)
	Stmt2 -> 'for' Ident . 'in' 'values' Ident 'do' Stmt 'end'    (rule 39)
	Stmt2 -> 'for' Ident . ',' Ident 'in' Ident 'do' Stmt 'end'    (rule 40)

	','            shift, and enter state 134
	'from'         shift, and enter state 135
	'in'           shift, and enter state 136


State 82

	BExpr -> 'check' Expr . 'in' Ident                  (rule 43)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'?'            shift, and enter state 96
	'in'           shift, and enter state 133


State 83

	BExpr -> BExpr '&' . BExpr1                         (rule 41)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 42
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	BExpr1         goto state 132
	Expr           goto state 44
	Expr1          goto state 41
	Expr2          goto state 39

State 84

	BExpr -> BExpr '|' . BExpr1                         (rule 42)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 42
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	BExpr1         goto state 131
	Expr           goto state 44
	Expr1          goto state 41
	Expr2          goto state 39

State 85

	BExpr -> BExpr . '&' BExpr1                         (rule 41)
	BExpr -> BExpr . '|' BExpr1                         (rule 42)
	BExpr1 -> '(' BExpr . ')'                           (rule 54)

	'&'            shift, and enter state 83
	')'            shift, and enter state 130
	'|'            shift, and enter state 84


State 86

	BExpr1 -> Expr . '=' Expr                           (rule 46)
	BExpr1 -> Expr . '<' Expr                           (rule 47)
	BExpr1 -> Expr . '<=' Expr                          (rule 48)
	BExpr1 -> Expr . '>' Expr                           (rule 49)
	BExpr1 -> Expr . '>=' Expr                          (rule 50)
	BExpr1 -> Expr . '!=' Expr                          (rule 51)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)
	Expr2 -> '(' Expr . ')'                             (rule 65)

	'!='           shift, and enter state 88
	')'            shift, and enter state 118
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'<'            shift, and enter state 91
	'<='           shift, and enter state 92
	'='            shift, and enter state 93
	'>'            shift, and enter state 94
	'>='           shift, and enter state 95
	'?'            shift, and enter state 96


State 87

	BExpr1 -> '!' BExpr1 .                              (rule 45)

	'&'            reduce using rule 45
	')'            reduce using rule 45
	'do'           reduce using rule 45
	'then'         reduce using rule 45
	'|'            reduce using rule 45
	%eof           reduce using rule 45


State 88

	BExpr1 -> Expr '!=' . Expr                          (rule 51)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 129
	Expr1          goto state 41
	Expr2          goto state 39

State 89

	Expr -> Expr '+' . Expr1                            (rule 55)

	'('            shift, and enter state 36
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr1          goto state 128
	Expr2          goto state 39

State 90

	Expr -> Expr '-' . Expr1                            (rule 56)

	'('            shift, and enter state 36
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr1          goto state 127
	Expr2          goto state 39

State 91

	BExpr1 -> Expr '<' . Expr                           (rule 47)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 126
	Expr1          goto state 41
	Expr2          goto state 39

State 92

	BExpr1 -> Expr '<=' . Expr                          (rule 48)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 125
	Expr1          goto state 41
	Expr2          goto state 39

State 93

	BExpr1 -> Expr '=' . Expr                           (rule 46)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 124
	Expr1          goto state 41
	Expr2          goto state 39

State 94

	BExpr1 -> Expr '>' . Expr                           (rule 49)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 123
	Expr1          goto state 41
	Expr2          goto state 39

State 95

	BExpr1 -> Expr '>=' . Expr                          (rule 50)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 122
	Expr1          goto state 41
	Expr2          goto state 39

State 96

	Expr -> Expr '?' . Expr ':' Expr                    (rule 58)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 121
	Expr1          goto state 41
	Expr2          goto state 39

State 97

	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> '-' Expr .                                  (rule 57)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'!='           reduce using rule 57
	'&'            reduce using rule 57
	')'            reduce using rule 57
	'+'            shift, and enter state 89
			(reduce using rule 57)

	'-'            shift, and enter state 90
			(reduce using rule 57)

	':'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'?'            shift, and enter state 96
			(reduce using rule 57)

	'catch'        reduce using rule 57
	'do'           reduce using rule 57
	'else'         reduce using rule 57
	'end'          reduce using rule 57
	'from'         reduce using rule 57
	'in'           reduce using rule 57
	'then'         reduce using rule 57
	'to'           reduce using rule 57
	'|'            reduce using rule 57
	%eof           reduce using rule 57


State 98

	Expr1 -> Expr1 '*' . Expr2                          (rule 60)

	'('            shift, and enter state 36
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr2          goto state 120

State 99

	Expr1 -> Expr1 '/' . Expr2                          (rule 61)

	'('            shift, and enter state 36
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr2          goto state 119

State 100

	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)
	Expr2 -> '(' Expr . ')'                             (rule 65)

	')'            shift, and enter state 118
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'?'            shift, and enter state 96


State 101

	CType -> 'dict' 'of' . Type                         (rule 69)

	'bool'         shift, and enter state 31
	'int'          shift, and enter state 32

	Type           goto state 117

State 102

	CType -> 'array' 'of' . Integer Type                (rule 68)

	L_integ        shift, and enter state 37

	Integer        goto state 116

State 103

	ADecl -> Ident 'of' . Type                          (rule 70)
	ADecl -> Ident 'of' . Type ',' ADecl                (rule 71)

	'bool'         shift, and enter state 31
	'int'          shift, and enter state 32

	Type           goto state 115

State 104

	FDecl -> 'fun' 'from' . ADecl 'to' 'void'           (rule 74)
	FDecl -> 'fun' 'from' . ADecl 'to' Ident 'of' Type    (rule 75)

	L_Ident        shift, and enter state 17

	Ident          goto state 25
	ADecl          goto state 114

State 105

	FDecl -> 'fun' 'to' . 'void'                        (rule 72)
	FDecl -> 'fun' 'to' . Ident 'of' Type               (rule 73)

	'void'         shift, and enter state 113
	L_Ident        shift, and enter state 17

	Ident          goto state 112

State 106

	Decl1 -> 'let' Ident . 'be' Type                    (rule 76)
	Decl1 -> 'let' Ident . 'be' CType                   (rule 77)

	'be'           shift, and enter state 111


State 107

	Decl1 -> 'elt' Ident . 'be' FDecl 'do' Stmt 'end'    (rule 78)

	'be'           shift, and enter state 110


State 108

	Decl -> Decl1 ';' . Decl                            (rule 79)

	'elt'          shift, and enter state 20
	'let'          shift, and enter state 21

	Decl1          goto state 18
	Decl           goto state 109

State 109

	Decl -> Decl1 ';' Decl .                            (rule 79)

	';'            reduce using rule 79
	%eof           reduce using rule 79


State 110

	Decl1 -> 'elt' Ident 'be' . FDecl 'do' Stmt 'end'    (rule 78)

	'fun'          shift, and enter state 24

	FDecl          goto state 167

State 111

	Decl1 -> 'let' Ident 'be' . Type                    (rule 76)
	Decl1 -> 'let' Ident 'be' . CType                   (rule 77)

	'array'        shift, and enter state 28
	'bool'         shift, and enter state 31
	'dict'         shift, and enter state 29
	'int'          shift, and enter state 32

	Type           goto state 165
	CType          goto state 166

State 112

	FDecl -> 'fun' 'to' Ident . 'of' Type               (rule 73)

	'of'           shift, and enter state 164


State 113

	FDecl -> 'fun' 'to' 'void' .                        (rule 72)

	'do'           reduce using rule 72
	%eof           reduce using rule 72


State 114

	FDecl -> 'fun' 'from' ADecl . 'to' 'void'           (rule 74)
	FDecl -> 'fun' 'from' ADecl . 'to' Ident 'of' Type    (rule 75)

	'to'           shift, and enter state 163


State 115

	ADecl -> Ident 'of' Type .                          (rule 70)
	ADecl -> Ident 'of' Type . ',' ADecl                (rule 71)

	','            shift, and enter state 162
	'to'           reduce using rule 70
	%eof           reduce using rule 70


State 116

	CType -> 'array' 'of' Integer . Type                (rule 68)

	'bool'         shift, and enter state 31
	'int'          shift, and enter state 32

	Type           goto state 161

State 117

	CType -> 'dict' 'of' Type .                         (rule 69)

	';'            reduce using rule 69
	%eof           reduce using rule 69


State 118

	Expr2 -> '(' Expr ')' .                             (rule 65)

	'!='           reduce using rule 65
	'&'            reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	':'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'?'            reduce using rule 65
	'catch'        reduce using rule 65
	'do'           reduce using rule 65
	'else'         reduce using rule 65
	'end'          reduce using rule 65
	'from'         reduce using rule 65
	'in'           reduce using rule 65
	'then'         reduce using rule 65
	'to'           reduce using rule 65
	'|'            reduce using rule 65
	%eof           reduce using rule 65


State 119

	Expr1 -> Expr1 '/' Expr2 .                          (rule 61)

	'!='           reduce using rule 61
	'&'            reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	':'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'?'            reduce using rule 61
	'catch'        reduce using rule 61
	'do'           reduce using rule 61
	'else'         reduce using rule 61
	'end'          reduce using rule 61
	'from'         reduce using rule 61
	'in'           reduce using rule 61
	'then'         reduce using rule 61
	'to'           reduce using rule 61
	'|'            reduce using rule 61
	%eof           reduce using rule 61


State 120

	Expr1 -> Expr1 '*' Expr2 .                          (rule 60)

	'!='           reduce using rule 60
	'&'            reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	':'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'?'            reduce using rule 60
	'catch'        reduce using rule 60
	'do'           reduce using rule 60
	'else'         reduce using rule 60
	'end'          reduce using rule 60
	'from'         reduce using rule 60
	'in'           reduce using rule 60
	'then'         reduce using rule 60
	'to'           reduce using rule 60
	'|'            reduce using rule 60
	%eof           reduce using rule 60


State 121

	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)
	Expr -> Expr '?' Expr . ':' Expr                    (rule 58)

	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	':'            shift, and enter state 160
	'?'            shift, and enter state 96


State 122

	BExpr1 -> Expr '>=' Expr .                          (rule 50)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'&'            reduce using rule 50
	')'            reduce using rule 50
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'?'            shift, and enter state 96
	'do'           reduce using rule 50
	'then'         reduce using rule 50
	'|'            reduce using rule 50
	%eof           reduce using rule 50


State 123

	BExpr1 -> Expr '>' Expr .                           (rule 49)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'&'            reduce using rule 49
	')'            reduce using rule 49
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'?'            shift, and enter state 96
	'do'           reduce using rule 49
	'then'         reduce using rule 49
	'|'            reduce using rule 49
	%eof           reduce using rule 49


State 124

	BExpr1 -> Expr '=' Expr .                           (rule 46)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'&'            reduce using rule 46
	')'            reduce using rule 46
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'?'            shift, and enter state 96
	'do'           reduce using rule 46
	'then'         reduce using rule 46
	'|'            reduce using rule 46
	%eof           reduce using rule 46


State 125

	BExpr1 -> Expr '<=' Expr .                          (rule 48)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'&'            reduce using rule 48
	')'            reduce using rule 48
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'?'            shift, and enter state 96
	'do'           reduce using rule 48
	'then'         reduce using rule 48
	'|'            reduce using rule 48
	%eof           reduce using rule 48


State 126

	BExpr1 -> Expr '<' Expr .                           (rule 47)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'&'            reduce using rule 47
	')'            reduce using rule 47
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'?'            shift, and enter state 96
	'do'           reduce using rule 47
	'then'         reduce using rule 47
	'|'            reduce using rule 47
	%eof           reduce using rule 47


State 127

	Expr -> Expr '-' Expr1 .                            (rule 56)
	Expr1 -> Expr1 . '*' Expr2                          (rule 60)
	Expr1 -> Expr1 . '/' Expr2                          (rule 61)

	'!='           reduce using rule 56
	'&'            reduce using rule 56
	')'            reduce using rule 56
	'*'            shift, and enter state 98
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'/'            shift, and enter state 99
	':'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'?'            reduce using rule 56
	'catch'        reduce using rule 56
	'do'           reduce using rule 56
	'else'         reduce using rule 56
	'end'          reduce using rule 56
	'from'         reduce using rule 56
	'in'           reduce using rule 56
	'then'         reduce using rule 56
	'to'           reduce using rule 56
	'|'            reduce using rule 56
	%eof           reduce using rule 56


State 128

	Expr -> Expr '+' Expr1 .                            (rule 55)
	Expr1 -> Expr1 . '*' Expr2                          (rule 60)
	Expr1 -> Expr1 . '/' Expr2                          (rule 61)

	'!='           reduce using rule 55
	'&'            reduce using rule 55
	')'            reduce using rule 55
	'*'            shift, and enter state 98
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'/'            shift, and enter state 99
	':'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'?'            reduce using rule 55
	'catch'        reduce using rule 55
	'do'           reduce using rule 55
	'else'         reduce using rule 55
	'end'          reduce using rule 55
	'from'         reduce using rule 55
	'in'           reduce using rule 55
	'then'         reduce using rule 55
	'to'           reduce using rule 55
	'|'            reduce using rule 55
	%eof           reduce using rule 55


State 129

	BExpr1 -> Expr '!=' Expr .                          (rule 51)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'&'            reduce using rule 51
	')'            reduce using rule 51
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'?'            shift, and enter state 96
	'do'           reduce using rule 51
	'then'         reduce using rule 51
	'|'            reduce using rule 51
	%eof           reduce using rule 51


State 130

	BExpr1 -> '(' BExpr ')' .                           (rule 54)

	'&'            reduce using rule 54
	')'            reduce using rule 54
	'do'           reduce using rule 54
	'then'         reduce using rule 54
	'|'            reduce using rule 54
	%eof           reduce using rule 54


State 131

	BExpr -> BExpr '|' BExpr1 .                         (rule 42)

	'&'            reduce using rule 42
	')'            reduce using rule 42
	'do'           reduce using rule 42
	'then'         reduce using rule 42
	'|'            reduce using rule 42
	%eof           reduce using rule 42


State 132

	BExpr -> BExpr '&' BExpr1 .                         (rule 41)

	'&'            reduce using rule 41
	')'            reduce using rule 41
	'do'           reduce using rule 41
	'then'         reduce using rule 41
	'|'            reduce using rule 41
	%eof           reduce using rule 41


State 133

	BExpr -> 'check' Expr 'in' . Ident                  (rule 43)

	L_Ident        shift, and enter state 17

	Ident          goto state 159

State 134

	Stmt2 -> 'for' Ident ',' . Ident 'in' Ident 'do' Stmt 'end'    (rule 40)

	L_Ident        shift, and enter state 17

	Ident          goto state 158

State 135

	Stmt2 -> 'for' Ident 'from' . Expr 'to' Expr 'do' Stmt 'end'    (rule 37)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 157
	Expr1          goto state 41
	Expr2          goto state 39

State 136

	Stmt2 -> 'for' Ident 'in' . 'keys' Ident 'do' Stmt 'end'    (rule 38)
	Stmt2 -> 'for' Ident 'in' . 'values' Ident 'do' Stmt 'end'    (rule 39)

	'keys'         shift, and enter state 155
	'values'       shift, and enter state 156


State 137

	Stmt2 -> 'if' BExpr 'then' . Stmt 'else' Stmt 'end'    (rule 34)
	Stmt2 -> 'if' BExpr 'then' . Stmt 'end'             (rule 35)

	'begin'        shift, and enter state 62
	'call'         shift, and enter state 63
	'del'          shift, and enter state 58
	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'print'        shift, and enter state 64
	'set'          shift, and enter state 59
	'try'          shift, and enter state 65
	'while'        shift, and enter state 55

	Stmt           goto state 154
	Stmt1          goto state 61
	Stmt2          goto state 57

State 138

	Stmt2 -> 'while' BExpr 'do' . Stmt1                 (rule 36)

	'del'          shift, and enter state 58
	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'set'          shift, and enter state 59
	'while'        shift, and enter state 55

	Stmt1          goto state 153
	Stmt2          goto state 57

State 139

	Stmt1 -> 'del' Expr 'from' . Ident                  (rule 32)

	L_Ident        shift, and enter state 17

	Ident          goto state 152

State 140

	Stmt1 -> 'set' Var 'to' . Expr                      (rule 29)
	Stmt1 -> 'set' Var 'to' . 'call' Ident              (rule 30)
	Stmt1 -> 'set' Var 'to' . 'call' Ident 'with' Arg    (rule 31)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	'call'         shift, and enter state 151
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 150
	Expr1          goto state 41
	Expr2          goto state 39

State 141

	Stmt -> Stmt1 ';' Stmt .                            (rule 27)

	'catch'        reduce using rule 27
	'else'         reduce using rule 27
	'end'          reduce using rule 27
	%eof           reduce using rule 27


State 142

	Stmt -> 'begin' Decl ';' . Stmt 'end'               (rule 25)

	'begin'        shift, and enter state 62
	'call'         shift, and enter state 63
	'del'          shift, and enter state 58
	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'print'        shift, and enter state 64
	'set'          shift, and enter state 59
	'try'          shift, and enter state 65
	'while'        shift, and enter state 55

	Stmt           goto state 149
	Stmt1          goto state 61
	Stmt2          goto state 57

State 143

	Stmt -> 'call' Ident 'with' . Arg                   (rule 23)

	L_Ident        shift, and enter state 17

	Ident          goto state 66
	Arg            goto state 148

State 144

	Stmt -> 'try' Stmt 'catch' . Stmt 'end'             (rule 26)

	'begin'        shift, and enter state 62
	'call'         shift, and enter state 63
	'del'          shift, and enter state 58
	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'print'        shift, and enter state 64
	'set'          shift, and enter state 59
	'try'          shift, and enter state 65
	'while'        shift, and enter state 55

	Stmt           goto state 147
	Stmt1          goto state 61
	Stmt2          goto state 57

State 145

	Arg -> Ident ',' Arg .                              (rule 21)

	';'            reduce using rule 21
	'catch'        reduce using rule 21
	'else'         reduce using rule 21
	'end'          reduce using rule 21
	%eof           reduce using rule 21


State 146

	Var -> Ident 'at' Expr .                            (rule 19)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'?'            shift, and enter state 96
	'to'           reduce using rule 19
	%eof           reduce using rule 19


State 147

	Stmt -> 'try' Stmt 'catch' Stmt . 'end'             (rule 26)

	'end'          shift, and enter state 182


State 148

	Stmt -> 'call' Ident 'with' Arg .                   (rule 23)

	'catch'        reduce using rule 23
	'else'         reduce using rule 23
	'end'          reduce using rule 23
	%eof           reduce using rule 23


State 149

	Stmt -> 'begin' Decl ';' Stmt . 'end'               (rule 25)

	'end'          shift, and enter state 181


State 150

	Stmt1 -> 'set' Var 'to' Expr .                      (rule 29)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	';'            reduce using rule 29
	'?'            shift, and enter state 96
	'catch'        reduce using rule 29
	'else'         reduce using rule 29
	'end'          reduce using rule 29
	%eof           reduce using rule 29


State 151

	Stmt1 -> 'set' Var 'to' 'call' . Ident              (rule 30)
	Stmt1 -> 'set' Var 'to' 'call' . Ident 'with' Arg    (rule 31)

	L_Ident        shift, and enter state 17

	Ident          goto state 180

State 152

	Stmt1 -> 'del' Expr 'from' Ident .                  (rule 32)

	';'            reduce using rule 32
	'catch'        reduce using rule 32
	'else'         reduce using rule 32
	'end'          reduce using rule 32
	%eof           reduce using rule 32


State 153

	Stmt2 -> 'while' BExpr 'do' Stmt1 .                 (rule 36)

	';'            reduce using rule 36
	'catch'        reduce using rule 36
	'else'         reduce using rule 36
	'end'          reduce using rule 36
	%eof           reduce using rule 36


State 154

	Stmt2 -> 'if' BExpr 'then' Stmt . 'else' Stmt 'end'    (rule 34)
	Stmt2 -> 'if' BExpr 'then' Stmt . 'end'             (rule 35)

	'else'         shift, and enter state 178
	'end'          shift, and enter state 179


State 155

	Stmt2 -> 'for' Ident 'in' 'keys' . Ident 'do' Stmt 'end'    (rule 38)

	L_Ident        shift, and enter state 17

	Ident          goto state 177

State 156

	Stmt2 -> 'for' Ident 'in' 'values' . Ident 'do' Stmt 'end'    (rule 39)

	L_Ident        shift, and enter state 17

	Ident          goto state 176

State 157

	Stmt2 -> 'for' Ident 'from' Expr . 'to' Expr 'do' Stmt 'end'    (rule 37)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'?'            shift, and enter state 96
	'to'           shift, and enter state 175


State 158

	Stmt2 -> 'for' Ident ',' Ident . 'in' Ident 'do' Stmt 'end'    (rule 40)

	'in'           shift, and enter state 174


State 159

	BExpr -> 'check' Expr 'in' Ident .                  (rule 43)

	'&'            reduce using rule 43
	')'            reduce using rule 43
	'do'           reduce using rule 43
	'then'         reduce using rule 43
	'|'            reduce using rule 43
	%eof           reduce using rule 43


State 160

	Expr -> Expr '?' Expr ':' . Expr                    (rule 58)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 173
	Expr1          goto state 41
	Expr2          goto state 39

State 161

	CType -> 'array' 'of' Integer Type .                (rule 68)

	';'            reduce using rule 68
	%eof           reduce using rule 68


State 162

	ADecl -> Ident 'of' Type ',' . ADecl                (rule 71)

	L_Ident        shift, and enter state 17

	Ident          goto state 25
	ADecl          goto state 172

State 163

	FDecl -> 'fun' 'from' ADecl 'to' . 'void'           (rule 74)
	FDecl -> 'fun' 'from' ADecl 'to' . Ident 'of' Type    (rule 75)

	'void'         shift, and enter state 171
	L_Ident        shift, and enter state 17

	Ident          goto state 170

State 164

	FDecl -> 'fun' 'to' Ident 'of' . Type               (rule 73)

	'bool'         shift, and enter state 31
	'int'          shift, and enter state 32

	Type           goto state 169

State 165

	Decl1 -> 'let' Ident 'be' Type .                    (rule 76)

	';'            reduce using rule 76
	%eof           reduce using rule 76


State 166

	Decl1 -> 'let' Ident 'be' CType .                   (rule 77)

	';'            reduce using rule 77
	%eof           reduce using rule 77


State 167

	Decl1 -> 'elt' Ident 'be' FDecl . 'do' Stmt 'end'    (rule 78)

	'do'           shift, and enter state 168


State 168

	Decl1 -> 'elt' Ident 'be' FDecl 'do' . Stmt 'end'    (rule 78)

	'begin'        shift, and enter state 62
	'call'         shift, and enter state 63
	'del'          shift, and enter state 58
	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'print'        shift, and enter state 64
	'set'          shift, and enter state 59
	'try'          shift, and enter state 65
	'while'        shift, and enter state 55

	Stmt           goto state 190
	Stmt1          goto state 61
	Stmt2          goto state 57

State 169

	FDecl -> 'fun' 'to' Ident 'of' Type .               (rule 73)

	'do'           reduce using rule 73
	%eof           reduce using rule 73


State 170

	FDecl -> 'fun' 'from' ADecl 'to' Ident . 'of' Type    (rule 75)

	'of'           shift, and enter state 189


State 171

	FDecl -> 'fun' 'from' ADecl 'to' 'void' .           (rule 74)

	'do'           reduce using rule 74
	%eof           reduce using rule 74


State 172

	ADecl -> Ident 'of' Type ',' ADecl .                (rule 71)

	'to'           reduce using rule 71
	%eof           reduce using rule 71


State 173

	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)
	Expr -> Expr '?' Expr ':' Expr .                    (rule 58)

	'!='           reduce using rule 58
	'&'            reduce using rule 58
	')'            reduce using rule 58
	'+'            shift, and enter state 89
			(reduce using rule 58)

	'-'            shift, and enter state 90
			(reduce using rule 58)

	':'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'?'            shift, and enter state 96
			(reduce using rule 58)

	'catch'        reduce using rule 58
	'do'           reduce using rule 58
	'else'         reduce using rule 58
	'end'          reduce using rule 58
	'from'         reduce using rule 58
	'in'           reduce using rule 58
	'then'         reduce using rule 58
	'to'           reduce using rule 58
	'|'            reduce using rule 58
	%eof           reduce using rule 58


State 174

	Stmt2 -> 'for' Ident ',' Ident 'in' . Ident 'do' Stmt 'end'    (rule 40)

	L_Ident        shift, and enter state 17

	Ident          goto state 188

State 175

	Stmt2 -> 'for' Ident 'from' Expr 'to' . Expr 'do' Stmt 'end'    (rule 37)

	'('            shift, and enter state 36
	'-'            shift, and enter state 42
	L_Ident        shift, and enter state 17
	L_integ        shift, and enter state 37

	Ident          goto state 33
	Integer        goto state 34
	Expr           goto state 187
	Expr1          goto state 41
	Expr2          goto state 39

State 176

	Stmt2 -> 'for' Ident 'in' 'values' Ident . 'do' Stmt 'end'    (rule 39)

	'do'           shift, and enter state 186


State 177

	Stmt2 -> 'for' Ident 'in' 'keys' Ident . 'do' Stmt 'end'    (rule 38)

	'do'           shift, and enter state 185


State 178

	Stmt2 -> 'if' BExpr 'then' Stmt 'else' . Stmt 'end'    (rule 34)

	'begin'        shift, and enter state 62
	'call'         shift, and enter state 63
	'del'          shift, and enter state 58
	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'print'        shift, and enter state 64
	'set'          shift, and enter state 59
	'try'          shift, and enter state 65
	'while'        shift, and enter state 55

	Stmt           goto state 184
	Stmt1          goto state 61
	Stmt2          goto state 57

State 179

	Stmt2 -> 'if' BExpr 'then' Stmt 'end' .             (rule 35)

	';'            reduce using rule 35
	'catch'        reduce using rule 35
	'else'         reduce using rule 35
	'end'          reduce using rule 35
	%eof           reduce using rule 35


State 180

	Stmt1 -> 'set' Var 'to' 'call' Ident .              (rule 30)
	Stmt1 -> 'set' Var 'to' 'call' Ident . 'with' Arg    (rule 31)

	';'            reduce using rule 30
	'catch'        reduce using rule 30
	'else'         reduce using rule 30
	'end'          reduce using rule 30
	'with'         shift, and enter state 183
	%eof           reduce using rule 30


State 181

	Stmt -> 'begin' Decl ';' Stmt 'end' .               (rule 25)

	'catch'        reduce using rule 25
	'else'         reduce using rule 25
	'end'          reduce using rule 25
	%eof           reduce using rule 25


State 182

	Stmt -> 'try' Stmt 'catch' Stmt 'end' .             (rule 26)

	'catch'        reduce using rule 26
	'else'         reduce using rule 26
	'end'          reduce using rule 26
	%eof           reduce using rule 26


State 183

	Stmt1 -> 'set' Var 'to' 'call' Ident 'with' . Arg    (rule 31)

	L_Ident        shift, and enter state 17

	Ident          goto state 66
	Arg            goto state 198

State 184

	Stmt2 -> 'if' BExpr 'then' Stmt 'else' Stmt . 'end'    (rule 34)

	'end'          shift, and enter state 197


State 185

	Stmt2 -> 'for' Ident 'in' 'keys' Ident 'do' . Stmt 'end'    (rule 38)

	'begin'        shift, and enter state 62
	'call'         shift, and enter state 63
	'del'          shift, and enter state 58
	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'print'        shift, and enter state 64
	'set'          shift, and enter state 59
	'try'          shift, and enter state 65
	'while'        shift, and enter state 55

	Stmt           goto state 196
	Stmt1          goto state 61
	Stmt2          goto state 57

State 186

	Stmt2 -> 'for' Ident 'in' 'values' Ident 'do' . Stmt 'end'    (rule 39)

	'begin'        shift, and enter state 62
	'call'         shift, and enter state 63
	'del'          shift, and enter state 58
	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'print'        shift, and enter state 64
	'set'          shift, and enter state 59
	'try'          shift, and enter state 65
	'while'        shift, and enter state 55

	Stmt           goto state 195
	Stmt1          goto state 61
	Stmt2          goto state 57

State 187

	Stmt2 -> 'for' Ident 'from' Expr 'to' Expr . 'do' Stmt 'end'    (rule 37)
	Expr -> Expr . '+' Expr1                            (rule 55)
	Expr -> Expr . '-' Expr1                            (rule 56)
	Expr -> Expr . '?' Expr ':' Expr                    (rule 58)

	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'?'            shift, and enter state 96
	'do'           shift, and enter state 194


State 188

	Stmt2 -> 'for' Ident ',' Ident 'in' Ident . 'do' Stmt 'end'    (rule 40)

	'do'           shift, and enter state 193


State 189

	FDecl -> 'fun' 'from' ADecl 'to' Ident 'of' . Type    (rule 75)

	'bool'         shift, and enter state 31
	'int'          shift, and enter state 32

	Type           goto state 192

State 190

	Decl1 -> 'elt' Ident 'be' FDecl 'do' Stmt . 'end'    (rule 78)

	'end'          shift, and enter state 191


State 191

	Decl1 -> 'elt' Ident 'be' FDecl 'do' Stmt 'end' .    (rule 78)

	';'            reduce using rule 78
	%eof           reduce using rule 78


State 192

	FDecl -> 'fun' 'from' ADecl 'to' Ident 'of' Type .    (rule 75)

	'do'           reduce using rule 75
	%eof           reduce using rule 75


State 193

	Stmt2 -> 'for' Ident ',' Ident 'in' Ident 'do' . Stmt 'end'    (rule 40)

	'begin'        shift, and enter state 62
	'call'         shift, and enter state 63
	'del'          shift, and enter state 58
	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'print'        shift, and enter state 64
	'set'          shift, and enter state 59
	'try'          shift, and enter state 65
	'while'        shift, and enter state 55

	Stmt           goto state 202
	Stmt1          goto state 61
	Stmt2          goto state 57

State 194

	Stmt2 -> 'for' Ident 'from' Expr 'to' Expr 'do' . Stmt 'end'    (rule 37)

	'begin'        shift, and enter state 62
	'call'         shift, and enter state 63
	'del'          shift, and enter state 58
	'for'          shift, and enter state 53
	'if'           shift, and enter state 54
	'print'        shift, and enter state 64
	'set'          shift, and enter state 59
	'try'          shift, and enter state 65
	'while'        shift, and enter state 55

	Stmt           goto state 201
	Stmt1          goto state 61
	Stmt2          goto state 57

State 195

	Stmt2 -> 'for' Ident 'in' 'values' Ident 'do' Stmt . 'end'    (rule 39)

	'end'          shift, and enter state 200


State 196

	Stmt2 -> 'for' Ident 'in' 'keys' Ident 'do' Stmt . 'end'    (rule 38)

	'end'          shift, and enter state 199


State 197

	Stmt2 -> 'if' BExpr 'then' Stmt 'else' Stmt 'end' .    (rule 34)

	';'            reduce using rule 34
	'catch'        reduce using rule 34
	'else'         reduce using rule 34
	'end'          reduce using rule 34
	%eof           reduce using rule 34


State 198

	Stmt1 -> 'set' Var 'to' 'call' Ident 'with' Arg .    (rule 31)

	';'            reduce using rule 31
	'catch'        reduce using rule 31
	'else'         reduce using rule 31
	'end'          reduce using rule 31
	%eof           reduce using rule 31


State 199

	Stmt2 -> 'for' Ident 'in' 'keys' Ident 'do' Stmt 'end' .    (rule 38)

	';'            reduce using rule 38
	'catch'        reduce using rule 38
	'else'         reduce using rule 38
	'end'          reduce using rule 38
	%eof           reduce using rule 38


State 200

	Stmt2 -> 'for' Ident 'in' 'values' Ident 'do' Stmt 'end' .    (rule 39)

	';'            reduce using rule 39
	'catch'        reduce using rule 39
	'else'         reduce using rule 39
	'end'          reduce using rule 39
	%eof           reduce using rule 39


State 201

	Stmt2 -> 'for' Ident 'from' Expr 'to' Expr 'do' Stmt . 'end'    (rule 37)

	'end'          shift, and enter state 204


State 202

	Stmt2 -> 'for' Ident ',' Ident 'in' Ident 'do' Stmt . 'end'    (rule 40)

	'end'          shift, and enter state 203


State 203

	Stmt2 -> 'for' Ident ',' Ident 'in' Ident 'do' Stmt 'end' .    (rule 40)

	';'            reduce using rule 40
	'catch'        reduce using rule 40
	'else'         reduce using rule 40
	'end'          reduce using rule 40
	%eof           reduce using rule 40


State 204

	Stmt2 -> 'for' Ident 'from' Expr 'to' Expr 'do' Stmt 'end' .    (rule 37)

	';'            reduce using rule 37
	'catch'        reduce using rule 37
	'else'         reduce using rule 37
	'end'          reduce using rule 37
	%eof           reduce using rule 37


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 81
Number of terminals: 55
Number of non-terminals: 34
Number of states: 205
